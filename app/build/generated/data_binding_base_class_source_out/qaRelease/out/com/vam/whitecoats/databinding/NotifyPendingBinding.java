// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotifyPendingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout innerLout;

  @NonNull
  public final ImageView notifyAcceptIg;

  @NonNull
  public final ImageView notifyRejectIg;

  @NonNull
  public final RoundedImageView nwnotificationImg;

  @NonNull
  public final TextView nwnotifyItemNameTxt;

  @NonNull
  public final TextView nwnotifyItemSpltyTxt;

  @NonNull
  public final LinearLayout nwreLayout;

  private NotifyPendingBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout innerLout,
      @NonNull ImageView notifyAcceptIg, @NonNull ImageView notifyRejectIg,
      @NonNull RoundedImageView nwnotificationImg, @NonNull TextView nwnotifyItemNameTxt,
      @NonNull TextView nwnotifyItemSpltyTxt, @NonNull LinearLayout nwreLayout) {
    this.rootView = rootView;
    this.innerLout = innerLout;
    this.notifyAcceptIg = notifyAcceptIg;
    this.notifyRejectIg = notifyRejectIg;
    this.nwnotificationImg = nwnotificationImg;
    this.nwnotifyItemNameTxt = nwnotifyItemNameTxt;
    this.nwnotifyItemSpltyTxt = nwnotifyItemSpltyTxt;
    this.nwreLayout = nwreLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotifyPendingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotifyPendingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notify_pending, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotifyPendingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.inner_lout;
      LinearLayout innerLout = ViewBindings.findChildViewById(rootView, id);
      if (innerLout == null) {
        break missingId;
      }

      id = R.id.notify_accept_ig;
      ImageView notifyAcceptIg = ViewBindings.findChildViewById(rootView, id);
      if (notifyAcceptIg == null) {
        break missingId;
      }

      id = R.id.notify_reject_ig;
      ImageView notifyRejectIg = ViewBindings.findChildViewById(rootView, id);
      if (notifyRejectIg == null) {
        break missingId;
      }

      id = R.id.nwnotification_img;
      RoundedImageView nwnotificationImg = ViewBindings.findChildViewById(rootView, id);
      if (nwnotificationImg == null) {
        break missingId;
      }

      id = R.id.nwnotify_item_name_txt;
      TextView nwnotifyItemNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (nwnotifyItemNameTxt == null) {
        break missingId;
      }

      id = R.id.nwnotify_item_splty_txt;
      TextView nwnotifyItemSpltyTxt = ViewBindings.findChildViewById(rootView, id);
      if (nwnotifyItemSpltyTxt == null) {
        break missingId;
      }

      id = R.id.nwre_layout;
      LinearLayout nwreLayout = ViewBindings.findChildViewById(rootView, id);
      if (nwreLayout == null) {
        break missingId;
      }

      return new NotifyPendingBinding((LinearLayout) rootView, innerLout, notifyAcceptIg,
          notifyRejectIg, nwnotificationImg, nwnotifyItemNameTxt, nwnotifyItemSpltyTxt, nwreLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
