// Generated by data binding compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.adapters.ExploreAdapter;
import com.vam.whitecoats.viewmodel.ExploreViewModel;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentExploreBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView aviInExplore;

  @NonNull
  public final RecyclerView categotyGrid;

  @NonNull
  public final SwipeRefreshLayout exploreSwipeRefresh;

  @Bindable
  protected ExploreViewModel mViewModel;

  @Bindable
  protected ExploreAdapter mAdapter;

  protected FragmentExploreBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AVLoadingIndicatorView aviInExplore, RecyclerView categotyGrid,
      SwipeRefreshLayout exploreSwipeRefresh) {
    super(_bindingComponent, _root, _localFieldCount);
    this.aviInExplore = aviInExplore;
    this.categotyGrid = categotyGrid;
    this.exploreSwipeRefresh = exploreSwipeRefresh;
  }

  public abstract void setViewModel(@Nullable ExploreViewModel viewModel);

  @Nullable
  public ExploreViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setAdapter(@Nullable ExploreAdapter adapter);

  @Nullable
  public ExploreAdapter getAdapter() {
    return mAdapter;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_explore, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentExploreBinding>inflateInternal(inflater, R.layout.fragment_explore, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_explore, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentExploreBinding>inflateInternal(inflater, R.layout.fragment_explore, null, false, component);
  }

  public static FragmentExploreBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentExploreBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentExploreBinding)bind(component, view, R.layout.fragment_explore);
  }
}
