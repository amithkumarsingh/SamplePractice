// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardBottomListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView communityIcon;

  @NonNull
  public final TextView communityName;

  @NonNull
  public final TextView communitySubName;

  @NonNull
  public final RelativeLayout imageIconLayout;

  private DashboardBottomListBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView communityIcon, @NonNull TextView communityName,
      @NonNull TextView communitySubName, @NonNull RelativeLayout imageIconLayout) {
    this.rootView = rootView;
    this.communityIcon = communityIcon;
    this.communityName = communityName;
    this.communitySubName = communitySubName;
    this.imageIconLayout = imageIconLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardBottomListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardBottomListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_bottom_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardBottomListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.community_icon;
      ImageView communityIcon = ViewBindings.findChildViewById(rootView, id);
      if (communityIcon == null) {
        break missingId;
      }

      id = R.id.community_name;
      TextView communityName = ViewBindings.findChildViewById(rootView, id);
      if (communityName == null) {
        break missingId;
      }

      id = R.id.community_sub_name;
      TextView communitySubName = ViewBindings.findChildViewById(rootView, id);
      if (communitySubName == null) {
        break missingId;
      }

      id = R.id.imageIconLayout;
      RelativeLayout imageIconLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageIconLayout == null) {
        break missingId;
      }

      return new DashboardBottomListBinding((LinearLayout) rootView, communityIcon, communityName,
          communitySubName, imageIconLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
