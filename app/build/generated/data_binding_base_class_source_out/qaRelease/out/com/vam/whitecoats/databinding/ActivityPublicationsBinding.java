// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TabWidget;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentTabHost;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPublicationsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout publicationstabconent;

  @NonNull
  public final FrameLayout tabcontent;

  @NonNull
  public final FragmentTabHost tabhost;

  @NonNull
  public final TabWidget tabs;

  private ActivityPublicationsBinding(@NonNull LinearLayout rootView,
      @NonNull FrameLayout publicationstabconent, @NonNull FrameLayout tabcontent,
      @NonNull FragmentTabHost tabhost, @NonNull TabWidget tabs) {
    this.rootView = rootView;
    this.publicationstabconent = publicationstabconent;
    this.tabcontent = tabcontent;
    this.tabhost = tabhost;
    this.tabs = tabs;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPublicationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPublicationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_publications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPublicationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.publicationstabconent;
      FrameLayout publicationstabconent = ViewBindings.findChildViewById(rootView, id);
      if (publicationstabconent == null) {
        break missingId;
      }

      id = android.R.id.tabcontent;
      FrameLayout tabcontent = ViewBindings.findChildViewById(rootView, id);
      if (tabcontent == null) {
        break missingId;
      }

      id = android.R.id.tabhost;
      FragmentTabHost tabhost = ViewBindings.findChildViewById(rootView, id);
      if (tabhost == null) {
        break missingId;
      }

      id = android.R.id.tabs;
      TabWidget tabs = ViewBindings.findChildViewById(rootView, id);
      if (tabs == null) {
        break missingId;
      }

      return new ActivityPublicationsBinding((LinearLayout) rootView, publicationstabconent,
          tabcontent, tabhost, tabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
