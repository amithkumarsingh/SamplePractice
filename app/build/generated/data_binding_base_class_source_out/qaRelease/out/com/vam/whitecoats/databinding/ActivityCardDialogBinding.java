// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView addReqBtn;

  @NonNull
  public final RelativeLayout cardArea;

  @NonNull
  public final TextView cardContactId;

  @NonNull
  public final TextView cardEmailId;

  @NonNull
  public final TextView cardSubSpecialty;

  @NonNull
  public final TextView cardVisitOtherName;

  @NonNull
  public final TextView cardVisitOthersLocation;

  @NonNull
  public final TextView cardVisitOthersSpecialty;

  @NonNull
  public final TextView cardVisitOthersWorkplace;

  @NonNull
  public final LinearLayout emailLinerLay;

  @NonNull
  public final ImageView messageBtn;

  @NonNull
  public final LinearLayout phoneLinerLay;

  @NonNull
  public final View separator;

  @NonNull
  public final View separator01;

  @NonNull
  public final ImageView shareBtn;

  @NonNull
  public final TextView verifyEmail;

  @NonNull
  public final TextView verifyPhone;

  @NonNull
  public final TextView viewCompleteProfileTv;

  @NonNull
  public final RoundedImageView visitCardPicImg;

  private ActivityCardDialogBinding(@NonNull LinearLayout rootView, @NonNull ImageView addReqBtn,
      @NonNull RelativeLayout cardArea, @NonNull TextView cardContactId,
      @NonNull TextView cardEmailId, @NonNull TextView cardSubSpecialty,
      @NonNull TextView cardVisitOtherName, @NonNull TextView cardVisitOthersLocation,
      @NonNull TextView cardVisitOthersSpecialty, @NonNull TextView cardVisitOthersWorkplace,
      @NonNull LinearLayout emailLinerLay, @NonNull ImageView messageBtn,
      @NonNull LinearLayout phoneLinerLay, @NonNull View separator, @NonNull View separator01,
      @NonNull ImageView shareBtn, @NonNull TextView verifyEmail, @NonNull TextView verifyPhone,
      @NonNull TextView viewCompleteProfileTv, @NonNull RoundedImageView visitCardPicImg) {
    this.rootView = rootView;
    this.addReqBtn = addReqBtn;
    this.cardArea = cardArea;
    this.cardContactId = cardContactId;
    this.cardEmailId = cardEmailId;
    this.cardSubSpecialty = cardSubSpecialty;
    this.cardVisitOtherName = cardVisitOtherName;
    this.cardVisitOthersLocation = cardVisitOthersLocation;
    this.cardVisitOthersSpecialty = cardVisitOthersSpecialty;
    this.cardVisitOthersWorkplace = cardVisitOthersWorkplace;
    this.emailLinerLay = emailLinerLay;
    this.messageBtn = messageBtn;
    this.phoneLinerLay = phoneLinerLay;
    this.separator = separator;
    this.separator01 = separator01;
    this.shareBtn = shareBtn;
    this.verifyEmail = verifyEmail;
    this.verifyPhone = verifyPhone;
    this.viewCompleteProfileTv = viewCompleteProfileTv;
    this.visitCardPicImg = visitCardPicImg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_req_btn;
      ImageView addReqBtn = ViewBindings.findChildViewById(rootView, id);
      if (addReqBtn == null) {
        break missingId;
      }

      id = R.id.card_area;
      RelativeLayout cardArea = ViewBindings.findChildViewById(rootView, id);
      if (cardArea == null) {
        break missingId;
      }

      id = R.id.card_contact_id;
      TextView cardContactId = ViewBindings.findChildViewById(rootView, id);
      if (cardContactId == null) {
        break missingId;
      }

      id = R.id.card_email_id;
      TextView cardEmailId = ViewBindings.findChildViewById(rootView, id);
      if (cardEmailId == null) {
        break missingId;
      }

      id = R.id.card_sub_specialty;
      TextView cardSubSpecialty = ViewBindings.findChildViewById(rootView, id);
      if (cardSubSpecialty == null) {
        break missingId;
      }

      id = R.id.card_visit_other_name;
      TextView cardVisitOtherName = ViewBindings.findChildViewById(rootView, id);
      if (cardVisitOtherName == null) {
        break missingId;
      }

      id = R.id.card_visit_others_location;
      TextView cardVisitOthersLocation = ViewBindings.findChildViewById(rootView, id);
      if (cardVisitOthersLocation == null) {
        break missingId;
      }

      id = R.id.card_visit_others_specialty;
      TextView cardVisitOthersSpecialty = ViewBindings.findChildViewById(rootView, id);
      if (cardVisitOthersSpecialty == null) {
        break missingId;
      }

      id = R.id.card_visit_others_workplace;
      TextView cardVisitOthersWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (cardVisitOthersWorkplace == null) {
        break missingId;
      }

      id = R.id.email_linerLay;
      LinearLayout emailLinerLay = ViewBindings.findChildViewById(rootView, id);
      if (emailLinerLay == null) {
        break missingId;
      }

      id = R.id.message_btn;
      ImageView messageBtn = ViewBindings.findChildViewById(rootView, id);
      if (messageBtn == null) {
        break missingId;
      }

      id = R.id.phone_linerLay;
      LinearLayout phoneLinerLay = ViewBindings.findChildViewById(rootView, id);
      if (phoneLinerLay == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = ViewBindings.findChildViewById(rootView, id);
      if (separator == null) {
        break missingId;
      }

      id = R.id.separator01;
      View separator01 = ViewBindings.findChildViewById(rootView, id);
      if (separator01 == null) {
        break missingId;
      }

      id = R.id.share_btn;
      ImageView shareBtn = ViewBindings.findChildViewById(rootView, id);
      if (shareBtn == null) {
        break missingId;
      }

      id = R.id.verify_email;
      TextView verifyEmail = ViewBindings.findChildViewById(rootView, id);
      if (verifyEmail == null) {
        break missingId;
      }

      id = R.id.verify_phone;
      TextView verifyPhone = ViewBindings.findChildViewById(rootView, id);
      if (verifyPhone == null) {
        break missingId;
      }

      id = R.id.view_complete_profile_tv;
      TextView viewCompleteProfileTv = ViewBindings.findChildViewById(rootView, id);
      if (viewCompleteProfileTv == null) {
        break missingId;
      }

      id = R.id.visit_card_pic_img;
      RoundedImageView visitCardPicImg = ViewBindings.findChildViewById(rootView, id);
      if (visitCardPicImg == null) {
        break missingId;
      }

      return new ActivityCardDialogBinding((LinearLayout) rootView, addReqBtn, cardArea,
          cardContactId, cardEmailId, cardSubSpecialty, cardVisitOtherName, cardVisitOthersLocation,
          cardVisitOthersSpecialty, cardVisitOthersWorkplace, emailLinerLay, messageBtn,
          phoneLinerLay, separator, separator01, shareBtn, verifyEmail, verifyPhone,
          viewCompleteProfileTv, visitCardPicImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
