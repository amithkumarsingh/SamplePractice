// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.activities.ClearAllFields;
import com.vam.whitecoats.utils.ClearAllFieldsAutoComplete;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFiltersearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout cityLay;

  @NonNull
  public final LinearLayout layoutLocation;

  @NonNull
  public final LinearLayout layoutWorkplace;

  @NonNull
  public final ClearAllFieldsAutoComplete searchbycity;

  @NonNull
  public final ClearAllFields searchbyclinic;

  @NonNull
  public final TextInputLayout workplaceLay;

  @NonNull
  public final RadioGroup workplaceradiogroup;

  private ActivityFiltersearchBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout cityLay, @NonNull LinearLayout layoutLocation,
      @NonNull LinearLayout layoutWorkplace, @NonNull ClearAllFieldsAutoComplete searchbycity,
      @NonNull ClearAllFields searchbyclinic, @NonNull TextInputLayout workplaceLay,
      @NonNull RadioGroup workplaceradiogroup) {
    this.rootView = rootView;
    this.cityLay = cityLay;
    this.layoutLocation = layoutLocation;
    this.layoutWorkplace = layoutWorkplace;
    this.searchbycity = searchbycity;
    this.searchbyclinic = searchbyclinic;
    this.workplaceLay = workplaceLay;
    this.workplaceradiogroup = workplaceradiogroup;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFiltersearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFiltersearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_filtersearch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFiltersearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city_lay;
      TextInputLayout cityLay = ViewBindings.findChildViewById(rootView, id);
      if (cityLay == null) {
        break missingId;
      }

      id = R.id.layout_location;
      LinearLayout layoutLocation = ViewBindings.findChildViewById(rootView, id);
      if (layoutLocation == null) {
        break missingId;
      }

      id = R.id.layout_workplace;
      LinearLayout layoutWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (layoutWorkplace == null) {
        break missingId;
      }

      id = R.id.searchbycity;
      ClearAllFieldsAutoComplete searchbycity = ViewBindings.findChildViewById(rootView, id);
      if (searchbycity == null) {
        break missingId;
      }

      id = R.id.searchbyclinic;
      ClearAllFields searchbyclinic = ViewBindings.findChildViewById(rootView, id);
      if (searchbyclinic == null) {
        break missingId;
      }

      id = R.id.workplace_lay;
      TextInputLayout workplaceLay = ViewBindings.findChildViewById(rootView, id);
      if (workplaceLay == null) {
        break missingId;
      }

      id = R.id.workplaceradiogroup;
      RadioGroup workplaceradiogroup = ViewBindings.findChildViewById(rootView, id);
      if (workplaceradiogroup == null) {
        break missingId;
      }

      return new ActivityFiltersearchBinding((LinearLayout) rootView, cityLay, layoutLocation,
          layoutWorkplace, searchbycity, searchbyclinic, workplaceLay, workplaceradiogroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
