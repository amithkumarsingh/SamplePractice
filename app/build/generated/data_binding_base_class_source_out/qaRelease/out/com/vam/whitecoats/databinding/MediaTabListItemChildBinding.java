// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MediaTabListItemChildBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RelativeLayout fileContentLayout;

  @NonNull
  public final ImageView mediaTabSectionImage;

  @NonNull
  public final ImageView pdfIcon;

  @NonNull
  public final ImageView videoIcon;

  private MediaTabListItemChildBinding(@NonNull CardView rootView,
      @NonNull RelativeLayout fileContentLayout, @NonNull ImageView mediaTabSectionImage,
      @NonNull ImageView pdfIcon, @NonNull ImageView videoIcon) {
    this.rootView = rootView;
    this.fileContentLayout = fileContentLayout;
    this.mediaTabSectionImage = mediaTabSectionImage;
    this.pdfIcon = pdfIcon;
    this.videoIcon = videoIcon;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaTabListItemChildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaTabListItemChildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_tab_list_item_child, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaTabListItemChildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.file_content_layout;
      RelativeLayout fileContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (fileContentLayout == null) {
        break missingId;
      }

      id = R.id.media_tab_section_image;
      ImageView mediaTabSectionImage = ViewBindings.findChildViewById(rootView, id);
      if (mediaTabSectionImage == null) {
        break missingId;
      }

      id = R.id.pdf_icon;
      ImageView pdfIcon = ViewBindings.findChildViewById(rootView, id);
      if (pdfIcon == null) {
        break missingId;
      }

      id = R.id.video_icon;
      ImageView videoIcon = ViewBindings.findChildViewById(rootView, id);
      if (videoIcon == null) {
        break missingId;
      }

      return new MediaTabListItemChildBinding((CardView) rootView, fileContentLayout,
          mediaTabSectionImage, pdfIcon, videoIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
