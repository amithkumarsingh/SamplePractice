// Generated by data binding compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.adapters.DrugAdapter;
import com.vam.whitecoats.viewmodel.DrugsViewModel;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityDrugsBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView drugAviInExplore;

  @NonNull
  public final RecyclerView drugRecycler;

  @NonNull
  public final SearchLayoutBinding drugSearchLayout;

  @NonNull
  public final SwipeRefreshLayout drugsRefersh;

  @Bindable
  protected DrugsViewModel mViewModel;

  @Bindable
  protected DrugAdapter mAdapter;

  protected ActivityDrugsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AVLoadingIndicatorView drugAviInExplore, RecyclerView drugRecycler,
      SearchLayoutBinding drugSearchLayout, SwipeRefreshLayout drugsRefersh) {
    super(_bindingComponent, _root, _localFieldCount);
    this.drugAviInExplore = drugAviInExplore;
    this.drugRecycler = drugRecycler;
    this.drugSearchLayout = drugSearchLayout;
    this.drugsRefersh = drugsRefersh;
  }

  public abstract void setViewModel(@Nullable DrugsViewModel viewModel);

  @Nullable
  public DrugsViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setAdapter(@Nullable DrugAdapter adapter);

  @Nullable
  public DrugAdapter getAdapter() {
    return mAdapter;
  }

  @NonNull
  public static ActivityDrugsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_drugs, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityDrugsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityDrugsBinding>inflateInternal(inflater, R.layout.activity_drugs, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityDrugsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_drugs, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityDrugsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityDrugsBinding>inflateInternal(inflater, R.layout.activity_drugs, null, false, component);
  }

  public static ActivityDrugsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityDrugsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityDrugsBinding)bind(component, view, R.layout.activity_drugs);
  }
}
