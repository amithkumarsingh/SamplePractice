// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentFullviewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout articleDocereeAdLayout;

  @NonNull
  public final TextView articleType;

  @NonNull
  public final ImageView attachmentIconSummary;

  @NonNull
  public final ImageView attachmentVideoType;

  @NonNull
  public final ActivityMediaplayerBinding audioPlayerLayout;

  @NonNull
  public final LinearLayout bookmarkContentFullview;

  @NonNull
  public final ImageView bookmarkContentFullviewImageView;

  @NonNull
  public final Button btnContactAdmin;

  @NonNull
  public final ImageView channelLogoFullview;

  @NonNull
  public final LinearLayout communityAttachmentLayoutSummary;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final LinearLayout contentDescLayout;

  @NonNull
  public final LatestCommentViewgroupBinding contentFullviewCommentLayout;

  @NonNull
  public final NestedScrollView contentScrollView;

  @NonNull
  public final TextView contentSpeciality;

  @NonNull
  public final ImageView contextImage;

  @NonNull
  public final TextView edited;

  @NonNull
  public final TextView feedCopyrightText;

  @NonNull
  public final TextView feedPostedDate;

  @NonNull
  public final TextView feedShortDesc;

  @NonNull
  public final TextView feedTitle;

  @NonNull
  public final RecyclerView fullViewThumbnailView;

  @NonNull
  public final TextView labelAttachmentNameSummary;

  @NonNull
  public final LinearLayout socialActionBar;

  @NonNull
  public final ViewPager viewPager;

  private ContentFullviewBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout articleDocereeAdLayout, @NonNull TextView articleType,
      @NonNull ImageView attachmentIconSummary, @NonNull ImageView attachmentVideoType,
      @NonNull ActivityMediaplayerBinding audioPlayerLayout,
      @NonNull LinearLayout bookmarkContentFullview,
      @NonNull ImageView bookmarkContentFullviewImageView, @NonNull Button btnContactAdmin,
      @NonNull ImageView channelLogoFullview,
      @NonNull LinearLayout communityAttachmentLayoutSummary, @NonNull LinearLayout container,
      @NonNull LinearLayout contentDescLayout,
      @NonNull LatestCommentViewgroupBinding contentFullviewCommentLayout,
      @NonNull NestedScrollView contentScrollView, @NonNull TextView contentSpeciality,
      @NonNull ImageView contextImage, @NonNull TextView edited,
      @NonNull TextView feedCopyrightText, @NonNull TextView feedPostedDate,
      @NonNull TextView feedShortDesc, @NonNull TextView feedTitle,
      @NonNull RecyclerView fullViewThumbnailView, @NonNull TextView labelAttachmentNameSummary,
      @NonNull LinearLayout socialActionBar, @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.articleDocereeAdLayout = articleDocereeAdLayout;
    this.articleType = articleType;
    this.attachmentIconSummary = attachmentIconSummary;
    this.attachmentVideoType = attachmentVideoType;
    this.audioPlayerLayout = audioPlayerLayout;
    this.bookmarkContentFullview = bookmarkContentFullview;
    this.bookmarkContentFullviewImageView = bookmarkContentFullviewImageView;
    this.btnContactAdmin = btnContactAdmin;
    this.channelLogoFullview = channelLogoFullview;
    this.communityAttachmentLayoutSummary = communityAttachmentLayoutSummary;
    this.container = container;
    this.contentDescLayout = contentDescLayout;
    this.contentFullviewCommentLayout = contentFullviewCommentLayout;
    this.contentScrollView = contentScrollView;
    this.contentSpeciality = contentSpeciality;
    this.contextImage = contextImage;
    this.edited = edited;
    this.feedCopyrightText = feedCopyrightText;
    this.feedPostedDate = feedPostedDate;
    this.feedShortDesc = feedShortDesc;
    this.feedTitle = feedTitle;
    this.fullViewThumbnailView = fullViewThumbnailView;
    this.labelAttachmentNameSummary = labelAttachmentNameSummary;
    this.socialActionBar = socialActionBar;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentFullviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentFullviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_fullview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentFullviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.article_doceree_ad_layout;
      RelativeLayout articleDocereeAdLayout = ViewBindings.findChildViewById(rootView, id);
      if (articleDocereeAdLayout == null) {
        break missingId;
      }

      id = R.id.article_type;
      TextView articleType = ViewBindings.findChildViewById(rootView, id);
      if (articleType == null) {
        break missingId;
      }

      id = R.id.attachment_icon_summary;
      ImageView attachmentIconSummary = ViewBindings.findChildViewById(rootView, id);
      if (attachmentIconSummary == null) {
        break missingId;
      }

      id = R.id.attachment_video_type;
      ImageView attachmentVideoType = ViewBindings.findChildViewById(rootView, id);
      if (attachmentVideoType == null) {
        break missingId;
      }

      id = R.id.audio_player_layout;
      View audioPlayerLayout = ViewBindings.findChildViewById(rootView, id);
      if (audioPlayerLayout == null) {
        break missingId;
      }
      ActivityMediaplayerBinding binding_audioPlayerLayout = ActivityMediaplayerBinding.bind(audioPlayerLayout);

      id = R.id.bookmark_contentFullview;
      LinearLayout bookmarkContentFullview = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkContentFullview == null) {
        break missingId;
      }

      id = R.id.bookmark_contentFullview_imageView;
      ImageView bookmarkContentFullviewImageView = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkContentFullviewImageView == null) {
        break missingId;
      }

      id = R.id.btn_contact_admin;
      Button btnContactAdmin = ViewBindings.findChildViewById(rootView, id);
      if (btnContactAdmin == null) {
        break missingId;
      }

      id = R.id.channelLogo_fullview;
      ImageView channelLogoFullview = ViewBindings.findChildViewById(rootView, id);
      if (channelLogoFullview == null) {
        break missingId;
      }

      id = R.id.community_attachment_layout_summary;
      LinearLayout communityAttachmentLayoutSummary = ViewBindings.findChildViewById(rootView, id);
      if (communityAttachmentLayoutSummary == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.content_desc_layout;
      LinearLayout contentDescLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentDescLayout == null) {
        break missingId;
      }

      id = R.id.content_fullview_comment_layout;
      View contentFullviewCommentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentFullviewCommentLayout == null) {
        break missingId;
      }
      LatestCommentViewgroupBinding binding_contentFullviewCommentLayout = LatestCommentViewgroupBinding.bind(contentFullviewCommentLayout);

      id = R.id.content_scroll_view;
      NestedScrollView contentScrollView = ViewBindings.findChildViewById(rootView, id);
      if (contentScrollView == null) {
        break missingId;
      }

      id = R.id.content_speciality;
      TextView contentSpeciality = ViewBindings.findChildViewById(rootView, id);
      if (contentSpeciality == null) {
        break missingId;
      }

      id = R.id.context_image;
      ImageView contextImage = ViewBindings.findChildViewById(rootView, id);
      if (contextImage == null) {
        break missingId;
      }

      id = R.id.edited;
      TextView edited = ViewBindings.findChildViewById(rootView, id);
      if (edited == null) {
        break missingId;
      }

      id = R.id.feed_copyright_text;
      TextView feedCopyrightText = ViewBindings.findChildViewById(rootView, id);
      if (feedCopyrightText == null) {
        break missingId;
      }

      id = R.id.feed_posted_date;
      TextView feedPostedDate = ViewBindings.findChildViewById(rootView, id);
      if (feedPostedDate == null) {
        break missingId;
      }

      id = R.id.feed_short_desc;
      TextView feedShortDesc = ViewBindings.findChildViewById(rootView, id);
      if (feedShortDesc == null) {
        break missingId;
      }

      id = R.id.feed_title;
      TextView feedTitle = ViewBindings.findChildViewById(rootView, id);
      if (feedTitle == null) {
        break missingId;
      }

      id = R.id.fullView_thumbnail_view;
      RecyclerView fullViewThumbnailView = ViewBindings.findChildViewById(rootView, id);
      if (fullViewThumbnailView == null) {
        break missingId;
      }

      id = R.id.label_attachment_name_summary;
      TextView labelAttachmentNameSummary = ViewBindings.findChildViewById(rootView, id);
      if (labelAttachmentNameSummary == null) {
        break missingId;
      }

      id = R.id.social_action_bar;
      LinearLayout socialActionBar = ViewBindings.findChildViewById(rootView, id);
      if (socialActionBar == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ContentFullviewBinding((RelativeLayout) rootView, articleDocereeAdLayout,
          articleType, attachmentIconSummary, attachmentVideoType, binding_audioPlayerLayout,
          bookmarkContentFullview, bookmarkContentFullviewImageView, btnContactAdmin,
          channelLogoFullview, communityAttachmentLayoutSummary, container, contentDescLayout,
          binding_contentFullviewCommentLayout, contentScrollView, contentSpeciality, contextImage,
          edited, feedCopyrightText, feedPostedDate, feedShortDesc, feedTitle,
          fullViewThumbnailView, labelAttachmentNameSummary, socialActionBar, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
