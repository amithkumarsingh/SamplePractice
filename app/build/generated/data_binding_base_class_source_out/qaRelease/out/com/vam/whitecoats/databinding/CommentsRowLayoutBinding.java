// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommentsRowLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView attachImage;

  @NonNull
  public final TextView commentText;

  @NonNull
  public final TextView commentTime;

  @NonNull
  public final RelativeLayout contextMenu;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final RoundedImageView doctorProfilePic;

  @NonNull
  public final RelativeLayout tileLayout;

  private CommentsRowLayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView attachImage,
      @NonNull TextView commentText, @NonNull TextView commentTime,
      @NonNull RelativeLayout contextMenu, @NonNull TextView doctorName,
      @NonNull RoundedImageView doctorProfilePic, @NonNull RelativeLayout tileLayout) {
    this.rootView = rootView;
    this.attachImage = attachImage;
    this.commentText = commentText;
    this.commentTime = commentTime;
    this.contextMenu = contextMenu;
    this.doctorName = doctorName;
    this.doctorProfilePic = doctorProfilePic;
    this.tileLayout = tileLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentsRowLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentsRowLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comments_row_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentsRowLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attach_image;
      ImageView attachImage = ViewBindings.findChildViewById(rootView, id);
      if (attachImage == null) {
        break missingId;
      }

      id = R.id.comment_text;
      TextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.comment_time;
      TextView commentTime = ViewBindings.findChildViewById(rootView, id);
      if (commentTime == null) {
        break missingId;
      }

      id = R.id.context_menu;
      RelativeLayout contextMenu = ViewBindings.findChildViewById(rootView, id);
      if (contextMenu == null) {
        break missingId;
      }

      id = R.id.doctor_name;
      TextView doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.doctor_profile_pic;
      RoundedImageView doctorProfilePic = ViewBindings.findChildViewById(rootView, id);
      if (doctorProfilePic == null) {
        break missingId;
      }

      id = R.id.tileLayout;
      RelativeLayout tileLayout = ViewBindings.findChildViewById(rootView, id);
      if (tileLayout == null) {
        break missingId;
      }

      return new CommentsRowLayoutBinding((LinearLayout) rootView, attachImage, commentText,
          commentTime, contextMenu, doctorName, doctorProfilePic, tileLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
