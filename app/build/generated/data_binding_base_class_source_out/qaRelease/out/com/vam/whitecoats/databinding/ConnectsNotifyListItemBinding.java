// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConnectsNotifyListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView acceptedText;

  @NonNull
  public final ProgressBar centeredProgressbar;

  @NonNull
  public final RelativeLayout innerLout;

  @NonNull
  public final TextView invitationTime;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final RoundedImageView notificationImg;

  @NonNull
  public final FrameLayout notificationImgFrame;

  @NonNull
  public final ImageView notifyAcceptIg;

  @NonNull
  public final TextView notifyItemNameTxt;

  @NonNull
  public final TextView notifyItemSpltyTxt;

  @NonNull
  public final ImageView notifyRejectIg;

  @NonNull
  public final RelativeLayout reNotify;

  @NonNull
  public final RelativeLayout rejectAcceptLay;

  private ConnectsNotifyListItemBinding(@NonNull LinearLayout rootView,
      @NonNull TextView acceptedText, @NonNull ProgressBar centeredProgressbar,
      @NonNull RelativeLayout innerLout, @NonNull TextView invitationTime,
      @NonNull TextView messageText, @NonNull RoundedImageView notificationImg,
      @NonNull FrameLayout notificationImgFrame, @NonNull ImageView notifyAcceptIg,
      @NonNull TextView notifyItemNameTxt, @NonNull TextView notifyItemSpltyTxt,
      @NonNull ImageView notifyRejectIg, @NonNull RelativeLayout reNotify,
      @NonNull RelativeLayout rejectAcceptLay) {
    this.rootView = rootView;
    this.acceptedText = acceptedText;
    this.centeredProgressbar = centeredProgressbar;
    this.innerLout = innerLout;
    this.invitationTime = invitationTime;
    this.messageText = messageText;
    this.notificationImg = notificationImg;
    this.notificationImgFrame = notificationImgFrame;
    this.notifyAcceptIg = notifyAcceptIg;
    this.notifyItemNameTxt = notifyItemNameTxt;
    this.notifyItemSpltyTxt = notifyItemSpltyTxt;
    this.notifyRejectIg = notifyRejectIg;
    this.reNotify = reNotify;
    this.rejectAcceptLay = rejectAcceptLay;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConnectsNotifyListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConnectsNotifyListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.connects_notify_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConnectsNotifyListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accepted_text;
      TextView acceptedText = ViewBindings.findChildViewById(rootView, id);
      if (acceptedText == null) {
        break missingId;
      }

      id = R.id.centered_progressbar;
      ProgressBar centeredProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (centeredProgressbar == null) {
        break missingId;
      }

      id = R.id.inner_lout;
      RelativeLayout innerLout = ViewBindings.findChildViewById(rootView, id);
      if (innerLout == null) {
        break missingId;
      }

      id = R.id.invitation_time;
      TextView invitationTime = ViewBindings.findChildViewById(rootView, id);
      if (invitationTime == null) {
        break missingId;
      }

      id = R.id.message_text;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.notification_img;
      RoundedImageView notificationImg = ViewBindings.findChildViewById(rootView, id);
      if (notificationImg == null) {
        break missingId;
      }

      id = R.id.notification_img_frame;
      FrameLayout notificationImgFrame = ViewBindings.findChildViewById(rootView, id);
      if (notificationImgFrame == null) {
        break missingId;
      }

      id = R.id.notify_accept_ig;
      ImageView notifyAcceptIg = ViewBindings.findChildViewById(rootView, id);
      if (notifyAcceptIg == null) {
        break missingId;
      }

      id = R.id.notify_item_name_txt;
      TextView notifyItemNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (notifyItemNameTxt == null) {
        break missingId;
      }

      id = R.id.notify_item_splty_txt;
      TextView notifyItemSpltyTxt = ViewBindings.findChildViewById(rootView, id);
      if (notifyItemSpltyTxt == null) {
        break missingId;
      }

      id = R.id.notify_reject_ig;
      ImageView notifyRejectIg = ViewBindings.findChildViewById(rootView, id);
      if (notifyRejectIg == null) {
        break missingId;
      }

      id = R.id.re_notify;
      RelativeLayout reNotify = ViewBindings.findChildViewById(rootView, id);
      if (reNotify == null) {
        break missingId;
      }

      id = R.id.reject_accept_lay;
      RelativeLayout rejectAcceptLay = ViewBindings.findChildViewById(rootView, id);
      if (rejectAcceptLay == null) {
        break missingId;
      }

      return new ConnectsNotifyListItemBinding((LinearLayout) rootView, acceptedText,
          centeredProgressbar, innerLout, invitationTime, messageText, notificationImg,
          notificationImgFrame, notifyAcceptIg, notifyItemNameTxt, notifyItemSpltyTxt,
          notifyRejectIg, reNotify, rejectAcceptLay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
