// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.NonScrollListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventCalendarSectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView eventAddImg;

  @NonNull
  public final RelativeLayout eventAddImgLay;

  @NonNull
  public final TextView eventsHeading;

  @NonNull
  public final NonScrollListView eventsList;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final TextView viewAllEvents;

  private EventCalendarSectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView eventAddImg, @NonNull RelativeLayout eventAddImgLay,
      @NonNull TextView eventsHeading, @NonNull NonScrollListView eventsList,
      @NonNull TextView titleText, @NonNull TextView viewAllEvents) {
    this.rootView = rootView;
    this.eventAddImg = eventAddImg;
    this.eventAddImgLay = eventAddImgLay;
    this.eventsHeading = eventsHeading;
    this.eventsList = eventsList;
    this.titleText = titleText;
    this.viewAllEvents = viewAllEvents;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventCalendarSectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventCalendarSectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_calendar_section, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventCalendarSectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.event_add_img;
      ImageView eventAddImg = ViewBindings.findChildViewById(rootView, id);
      if (eventAddImg == null) {
        break missingId;
      }

      id = R.id.event_add_img_lay;
      RelativeLayout eventAddImgLay = ViewBindings.findChildViewById(rootView, id);
      if (eventAddImgLay == null) {
        break missingId;
      }

      id = R.id.events_heading;
      TextView eventsHeading = ViewBindings.findChildViewById(rootView, id);
      if (eventsHeading == null) {
        break missingId;
      }

      id = R.id.events_list;
      NonScrollListView eventsList = ViewBindings.findChildViewById(rootView, id);
      if (eventsList == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.view_all_events;
      TextView viewAllEvents = ViewBindings.findChildViewById(rootView, id);
      if (viewAllEvents == null) {
        break missingId;
      }

      return new EventCalendarSectionBinding((ConstraintLayout) rootView, eventAddImg,
          eventAddImgLay, eventsHeading, eventsList, titleText, viewAllEvents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
