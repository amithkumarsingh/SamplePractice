// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class JobApplicationBottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView PreferredLocationSpecialityText;

  @NonNull
  public final TextView doneBtn;

  @NonNull
  public final ListView jobSpecialityLocationList;

  @NonNull
  public final View separator;

  @NonNull
  public final ConstraintLayout sheetConstraintLayout;

  private JobApplicationBottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView PreferredLocationSpecialityText, @NonNull TextView doneBtn,
      @NonNull ListView jobSpecialityLocationList, @NonNull View separator,
      @NonNull ConstraintLayout sheetConstraintLayout) {
    this.rootView = rootView;
    this.PreferredLocationSpecialityText = PreferredLocationSpecialityText;
    this.doneBtn = doneBtn;
    this.jobSpecialityLocationList = jobSpecialityLocationList;
    this.separator = separator;
    this.sheetConstraintLayout = sheetConstraintLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static JobApplicationBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static JobApplicationBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.job_application_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static JobApplicationBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Preferred_location_speciality_text;
      TextView PreferredLocationSpecialityText = ViewBindings.findChildViewById(rootView, id);
      if (PreferredLocationSpecialityText == null) {
        break missingId;
      }

      id = R.id.done_btn;
      TextView doneBtn = ViewBindings.findChildViewById(rootView, id);
      if (doneBtn == null) {
        break missingId;
      }

      id = R.id.job_speciality_location_list;
      ListView jobSpecialityLocationList = ViewBindings.findChildViewById(rootView, id);
      if (jobSpecialityLocationList == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = ViewBindings.findChildViewById(rootView, id);
      if (separator == null) {
        break missingId;
      }

      ConstraintLayout sheetConstraintLayout = (ConstraintLayout) rootView;

      return new JobApplicationBottomSheetBinding((ConstraintLayout) rootView,
          PreferredLocationSpecialityText, doneBtn, jobSpecialityLocationList, separator,
          sheetConstraintLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
