// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentApplyJobBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TableLayout attachmentsTable;

  @NonNull
  public final Button buttonApplyJob;

  @NonNull
  public final CountryCodePicker ccpJobfullview;

  @NonNull
  public final TextView cityErrorText;

  @NonNull
  public final AutoCompleteTextView cityJobEdit;

  @NonNull
  public final Button coveringDeleteButton;

  @NonNull
  public final TableRow coveringLetterRow;

  @NonNull
  public final Button cvDeleteButton;

  @NonNull
  public final TableRow cvRow;

  @NonNull
  public final TableRow emailRow;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etMobile;

  @NonNull
  public final AutoCompleteTextView experienceAutocompleteView;

  @NonNull
  public final TextView experienceErrorText;

  @NonNull
  public final TextInputLayout experienceJobViewLay;

  @NonNull
  public final LinearLayout llCoveringDeleteButton;

  @NonNull
  public final LinearLayout llCvDeleteButton;

  @NonNull
  public final TableRow mobileRow;

  @NonNull
  public final TextView preferredLocationErrorText;

  @NonNull
  public final EditText preferredLocationEt;

  @NonNull
  public final TextInputLayout preferredLocationEtLay;

  @NonNull
  public final TextView preferredSpecialityErrorText;

  @NonNull
  public final EditText preferredSpecialityEt;

  @NonNull
  public final TextInputLayout preferredSpecialityEtLay;

  @NonNull
  public final TextView specialityErrorText;

  @NonNull
  public final AutoCompleteTextView specialityJobEdit;

  @NonNull
  public final TextInputLayout tilCity;

  @NonNull
  public final TextInputLayout tilSpecialization;

  @NonNull
  public final TextView tvAttachConvering;

  @NonNull
  public final TextView tvAttachCv;

  @NonNull
  public final TextView tvSubmittedText;

  private FragmentApplyJobBinding(@NonNull ScrollView rootView,
      @NonNull TableLayout attachmentsTable, @NonNull Button buttonApplyJob,
      @NonNull CountryCodePicker ccpJobfullview, @NonNull TextView cityErrorText,
      @NonNull AutoCompleteTextView cityJobEdit, @NonNull Button coveringDeleteButton,
      @NonNull TableRow coveringLetterRow, @NonNull Button cvDeleteButton, @NonNull TableRow cvRow,
      @NonNull TableRow emailRow, @NonNull EditText etEmail, @NonNull EditText etMobile,
      @NonNull AutoCompleteTextView experienceAutocompleteView,
      @NonNull TextView experienceErrorText, @NonNull TextInputLayout experienceJobViewLay,
      @NonNull LinearLayout llCoveringDeleteButton, @NonNull LinearLayout llCvDeleteButton,
      @NonNull TableRow mobileRow, @NonNull TextView preferredLocationErrorText,
      @NonNull EditText preferredLocationEt, @NonNull TextInputLayout preferredLocationEtLay,
      @NonNull TextView preferredSpecialityErrorText, @NonNull EditText preferredSpecialityEt,
      @NonNull TextInputLayout preferredSpecialityEtLay, @NonNull TextView specialityErrorText,
      @NonNull AutoCompleteTextView specialityJobEdit, @NonNull TextInputLayout tilCity,
      @NonNull TextInputLayout tilSpecialization, @NonNull TextView tvAttachConvering,
      @NonNull TextView tvAttachCv, @NonNull TextView tvSubmittedText) {
    this.rootView = rootView;
    this.attachmentsTable = attachmentsTable;
    this.buttonApplyJob = buttonApplyJob;
    this.ccpJobfullview = ccpJobfullview;
    this.cityErrorText = cityErrorText;
    this.cityJobEdit = cityJobEdit;
    this.coveringDeleteButton = coveringDeleteButton;
    this.coveringLetterRow = coveringLetterRow;
    this.cvDeleteButton = cvDeleteButton;
    this.cvRow = cvRow;
    this.emailRow = emailRow;
    this.etEmail = etEmail;
    this.etMobile = etMobile;
    this.experienceAutocompleteView = experienceAutocompleteView;
    this.experienceErrorText = experienceErrorText;
    this.experienceJobViewLay = experienceJobViewLay;
    this.llCoveringDeleteButton = llCoveringDeleteButton;
    this.llCvDeleteButton = llCvDeleteButton;
    this.mobileRow = mobileRow;
    this.preferredLocationErrorText = preferredLocationErrorText;
    this.preferredLocationEt = preferredLocationEt;
    this.preferredLocationEtLay = preferredLocationEtLay;
    this.preferredSpecialityErrorText = preferredSpecialityErrorText;
    this.preferredSpecialityEt = preferredSpecialityEt;
    this.preferredSpecialityEtLay = preferredSpecialityEtLay;
    this.specialityErrorText = specialityErrorText;
    this.specialityJobEdit = specialityJobEdit;
    this.tilCity = tilCity;
    this.tilSpecialization = tilSpecialization;
    this.tvAttachConvering = tvAttachConvering;
    this.tvAttachCv = tvAttachCv;
    this.tvSubmittedText = tvSubmittedText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentApplyJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentApplyJobBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_apply_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentApplyJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachmentsTable;
      TableLayout attachmentsTable = ViewBindings.findChildViewById(rootView, id);
      if (attachmentsTable == null) {
        break missingId;
      }

      id = R.id.button_apply_job;
      Button buttonApplyJob = ViewBindings.findChildViewById(rootView, id);
      if (buttonApplyJob == null) {
        break missingId;
      }

      id = R.id.ccp_jobfullview;
      CountryCodePicker ccpJobfullview = ViewBindings.findChildViewById(rootView, id);
      if (ccpJobfullview == null) {
        break missingId;
      }

      id = R.id.city_error_text;
      TextView cityErrorText = ViewBindings.findChildViewById(rootView, id);
      if (cityErrorText == null) {
        break missingId;
      }

      id = R.id.city_job_edit;
      AutoCompleteTextView cityJobEdit = ViewBindings.findChildViewById(rootView, id);
      if (cityJobEdit == null) {
        break missingId;
      }

      id = R.id.coveringDeleteButton;
      Button coveringDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (coveringDeleteButton == null) {
        break missingId;
      }

      id = R.id.covering_letter_row;
      TableRow coveringLetterRow = ViewBindings.findChildViewById(rootView, id);
      if (coveringLetterRow == null) {
        break missingId;
      }

      id = R.id.cvDeleteButton;
      Button cvDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (cvDeleteButton == null) {
        break missingId;
      }

      id = R.id.cv_row;
      TableRow cvRow = ViewBindings.findChildViewById(rootView, id);
      if (cvRow == null) {
        break missingId;
      }

      id = R.id.email_row;
      TableRow emailRow = ViewBindings.findChildViewById(rootView, id);
      if (emailRow == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_mobile;
      EditText etMobile = ViewBindings.findChildViewById(rootView, id);
      if (etMobile == null) {
        break missingId;
      }

      id = R.id.experience_autocomplete_view;
      AutoCompleteTextView experienceAutocompleteView = ViewBindings.findChildViewById(rootView, id);
      if (experienceAutocompleteView == null) {
        break missingId;
      }

      id = R.id.experience_error_text;
      TextView experienceErrorText = ViewBindings.findChildViewById(rootView, id);
      if (experienceErrorText == null) {
        break missingId;
      }

      id = R.id.experience_job_view_lay;
      TextInputLayout experienceJobViewLay = ViewBindings.findChildViewById(rootView, id);
      if (experienceJobViewLay == null) {
        break missingId;
      }

      id = R.id.ll_coveringDeleteButton;
      LinearLayout llCoveringDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (llCoveringDeleteButton == null) {
        break missingId;
      }

      id = R.id.ll_cvDeleteButton;
      LinearLayout llCvDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (llCvDeleteButton == null) {
        break missingId;
      }

      id = R.id.mobile_row;
      TableRow mobileRow = ViewBindings.findChildViewById(rootView, id);
      if (mobileRow == null) {
        break missingId;
      }

      id = R.id.preferred_location_error_text;
      TextView preferredLocationErrorText = ViewBindings.findChildViewById(rootView, id);
      if (preferredLocationErrorText == null) {
        break missingId;
      }

      id = R.id.preferred_location_et;
      EditText preferredLocationEt = ViewBindings.findChildViewById(rootView, id);
      if (preferredLocationEt == null) {
        break missingId;
      }

      id = R.id.preferred_location_et_lay;
      TextInputLayout preferredLocationEtLay = ViewBindings.findChildViewById(rootView, id);
      if (preferredLocationEtLay == null) {
        break missingId;
      }

      id = R.id.preferred_speciality_error_text;
      TextView preferredSpecialityErrorText = ViewBindings.findChildViewById(rootView, id);
      if (preferredSpecialityErrorText == null) {
        break missingId;
      }

      id = R.id.preferred_speciality_et;
      EditText preferredSpecialityEt = ViewBindings.findChildViewById(rootView, id);
      if (preferredSpecialityEt == null) {
        break missingId;
      }

      id = R.id.preferred_speciality_et_lay;
      TextInputLayout preferredSpecialityEtLay = ViewBindings.findChildViewById(rootView, id);
      if (preferredSpecialityEtLay == null) {
        break missingId;
      }

      id = R.id.speciality_error_text;
      TextView specialityErrorText = ViewBindings.findChildViewById(rootView, id);
      if (specialityErrorText == null) {
        break missingId;
      }

      id = R.id.speciality_job_edit;
      AutoCompleteTextView specialityJobEdit = ViewBindings.findChildViewById(rootView, id);
      if (specialityJobEdit == null) {
        break missingId;
      }

      id = R.id.til_city;
      TextInputLayout tilCity = ViewBindings.findChildViewById(rootView, id);
      if (tilCity == null) {
        break missingId;
      }

      id = R.id.til_specialization;
      TextInputLayout tilSpecialization = ViewBindings.findChildViewById(rootView, id);
      if (tilSpecialization == null) {
        break missingId;
      }

      id = R.id.tv_attach_convering;
      TextView tvAttachConvering = ViewBindings.findChildViewById(rootView, id);
      if (tvAttachConvering == null) {
        break missingId;
      }

      id = R.id.tv_attach_cv;
      TextView tvAttachCv = ViewBindings.findChildViewById(rootView, id);
      if (tvAttachCv == null) {
        break missingId;
      }

      id = R.id.tv_submitted_text;
      TextView tvSubmittedText = ViewBindings.findChildViewById(rootView, id);
      if (tvSubmittedText == null) {
        break missingId;
      }

      return new FragmentApplyJobBinding((ScrollView) rootView, attachmentsTable, buttonApplyJob,
          ccpJobfullview, cityErrorText, cityJobEdit, coveringDeleteButton, coveringLetterRow,
          cvDeleteButton, cvRow, emailRow, etEmail, etMobile, experienceAutocompleteView,
          experienceErrorText, experienceJobViewLay, llCoveringDeleteButton, llCvDeleteButton,
          mobileRow, preferredLocationErrorText, preferredLocationEt, preferredLocationEtLay,
          preferredSpecialityErrorText, preferredSpecialityEt, preferredSpecialityEtLay,
          specialityErrorText, specialityJobEdit, tilCity, tilSpecialization, tvAttachConvering,
          tvAttachCv, tvSubmittedText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
