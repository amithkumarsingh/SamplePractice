// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserSearchResultsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnLocation;

  @NonNull
  public final Button btnSpeciality;

  @NonNull
  public final Button btnWorkplace;

  @NonNull
  public final LinearLayout layoutSearchList;

  @NonNull
  public final TextView noNetworkResultsTxt;

  @NonNull
  public final RecyclerView searchRecyclerView;

  @NonNull
  public final SwipeRefreshLayout swipeContainerUserSearch;

  @NonNull
  public final HorizontalScrollView userFiltersList;

  private UserSearchResultsBinding(@NonNull LinearLayout rootView, @NonNull Button btnClear,
      @NonNull Button btnLocation, @NonNull Button btnSpeciality, @NonNull Button btnWorkplace,
      @NonNull LinearLayout layoutSearchList, @NonNull TextView noNetworkResultsTxt,
      @NonNull RecyclerView searchRecyclerView,
      @NonNull SwipeRefreshLayout swipeContainerUserSearch,
      @NonNull HorizontalScrollView userFiltersList) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnLocation = btnLocation;
    this.btnSpeciality = btnSpeciality;
    this.btnWorkplace = btnWorkplace;
    this.layoutSearchList = layoutSearchList;
    this.noNetworkResultsTxt = noNetworkResultsTxt;
    this.searchRecyclerView = searchRecyclerView;
    this.swipeContainerUserSearch = swipeContainerUserSearch;
    this.userFiltersList = userFiltersList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserSearchResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserSearchResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_search_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserSearchResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btn_Location;
      Button btnLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnLocation == null) {
        break missingId;
      }

      id = R.id.btn_speciality;
      Button btnSpeciality = ViewBindings.findChildViewById(rootView, id);
      if (btnSpeciality == null) {
        break missingId;
      }

      id = R.id.btn_workplace;
      Button btnWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (btnWorkplace == null) {
        break missingId;
      }

      id = R.id.layout_search_list;
      LinearLayout layoutSearchList = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearchList == null) {
        break missingId;
      }

      id = R.id.noNetworkResults_txt;
      TextView noNetworkResultsTxt = ViewBindings.findChildViewById(rootView, id);
      if (noNetworkResultsTxt == null) {
        break missingId;
      }

      id = R.id.searchRecyclerView;
      RecyclerView searchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchRecyclerView == null) {
        break missingId;
      }

      id = R.id.swipeContainer_userSearch;
      SwipeRefreshLayout swipeContainerUserSearch = ViewBindings.findChildViewById(rootView, id);
      if (swipeContainerUserSearch == null) {
        break missingId;
      }

      id = R.id.user_filters_list;
      HorizontalScrollView userFiltersList = ViewBindings.findChildViewById(rootView, id);
      if (userFiltersList == null) {
        break missingId;
      }

      return new UserSearchResultsBinding((LinearLayout) rootView, btnClear, btnLocation,
          btnSpeciality, btnWorkplace, layoutSearchList, noNetworkResultsTxt, searchRecyclerView,
          swipeContainerUserSearch, userFiltersList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
