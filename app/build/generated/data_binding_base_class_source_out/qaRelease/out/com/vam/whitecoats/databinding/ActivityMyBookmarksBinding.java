// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyBookmarksBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AVLoadingIndicatorView aviInBookmarksList;

  @NonNull
  public final RecyclerView bookmarksRecyclerView;

  @NonNull
  public final RecyclerView categoryFilterList;

  @NonNull
  public final ProgressBar loadingProgressBookMarks;

  @NonNull
  public final TextView noBookMarks;

  @NonNull
  public final RelativeLayout parentLayout;

  @NonNull
  public final SwipeRefreshLayout swipeContainerBookMarks;

  private ActivityMyBookmarksBinding(@NonNull RelativeLayout rootView,
      @NonNull AVLoadingIndicatorView aviInBookmarksList,
      @NonNull RecyclerView bookmarksRecyclerView, @NonNull RecyclerView categoryFilterList,
      @NonNull ProgressBar loadingProgressBookMarks, @NonNull TextView noBookMarks,
      @NonNull RelativeLayout parentLayout, @NonNull SwipeRefreshLayout swipeContainerBookMarks) {
    this.rootView = rootView;
    this.aviInBookmarksList = aviInBookmarksList;
    this.bookmarksRecyclerView = bookmarksRecyclerView;
    this.categoryFilterList = categoryFilterList;
    this.loadingProgressBookMarks = loadingProgressBookMarks;
    this.noBookMarks = noBookMarks;
    this.parentLayout = parentLayout;
    this.swipeContainerBookMarks = swipeContainerBookMarks;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyBookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyBookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyBookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aviInBookmarksList;
      AVLoadingIndicatorView aviInBookmarksList = ViewBindings.findChildViewById(rootView, id);
      if (aviInBookmarksList == null) {
        break missingId;
      }

      id = R.id.bookmarks_recycler_view;
      RecyclerView bookmarksRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksRecyclerView == null) {
        break missingId;
      }

      id = R.id.category_filter_list;
      RecyclerView categoryFilterList = ViewBindings.findChildViewById(rootView, id);
      if (categoryFilterList == null) {
        break missingId;
      }

      id = R.id.loading_progress_bookMarks;
      ProgressBar loadingProgressBookMarks = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBookMarks == null) {
        break missingId;
      }

      id = R.id.no_bookMarks;
      TextView noBookMarks = ViewBindings.findChildViewById(rootView, id);
      if (noBookMarks == null) {
        break missingId;
      }

      RelativeLayout parentLayout = (RelativeLayout) rootView;

      id = R.id.swipeContainer_bookMarks;
      SwipeRefreshLayout swipeContainerBookMarks = ViewBindings.findChildViewById(rootView, id);
      if (swipeContainerBookMarks == null) {
        break missingId;
      }

      return new ActivityMyBookmarksBinding((RelativeLayout) rootView, aviInBookmarksList,
          bookmarksRecyclerView, categoryFilterList, loadingProgressBookMarks, noBookMarks,
          parentLayout, swipeContainerBookMarks);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
