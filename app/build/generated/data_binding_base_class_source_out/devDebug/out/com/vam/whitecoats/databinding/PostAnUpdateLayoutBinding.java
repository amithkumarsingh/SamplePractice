// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostAnUpdateLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView addPicSymbol;

  @NonNull
  public final TextView postUpdateLabel;

  @NonNull
  public final LinearLayout postUpdateLabelLay;

  @NonNull
  public final RoundedImageView profilePicTimeline;

  private PostAnUpdateLayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView addPicSymbol,
      @NonNull TextView postUpdateLabel, @NonNull LinearLayout postUpdateLabelLay,
      @NonNull RoundedImageView profilePicTimeline) {
    this.rootView = rootView;
    this.addPicSymbol = addPicSymbol;
    this.postUpdateLabel = postUpdateLabel;
    this.postUpdateLabelLay = postUpdateLabelLay;
    this.profilePicTimeline = profilePicTimeline;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostAnUpdateLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostAnUpdateLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_an_update_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostAnUpdateLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_pic_symbol;
      ImageView addPicSymbol = ViewBindings.findChildViewById(rootView, id);
      if (addPicSymbol == null) {
        break missingId;
      }

      id = R.id.postUpdateLabel;
      TextView postUpdateLabel = ViewBindings.findChildViewById(rootView, id);
      if (postUpdateLabel == null) {
        break missingId;
      }

      id = R.id.postUpdateLabel_lay;
      LinearLayout postUpdateLabelLay = ViewBindings.findChildViewById(rootView, id);
      if (postUpdateLabelLay == null) {
        break missingId;
      }

      id = R.id.profile_pic_timeline;
      RoundedImageView profilePicTimeline = ViewBindings.findChildViewById(rootView, id);
      if (profilePicTimeline == null) {
        break missingId;
      }

      return new PostAnUpdateLayoutBinding((LinearLayout) rootView, addPicSymbol, postUpdateLabel,
          postUpdateLabelLay, profilePicTimeline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
