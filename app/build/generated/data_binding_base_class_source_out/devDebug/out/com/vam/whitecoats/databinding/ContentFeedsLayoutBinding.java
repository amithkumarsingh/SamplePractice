// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentFeedsLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView categoryFilterList;

  @NonNull
  public final RecyclerView feedsList;

  @NonNull
  public final View grayOverlayLayout;

  @NonNull
  public final ProgressBar loadingProgressBookMarks;

  @NonNull
  public final TextView noBookMarks;

  @NonNull
  public final RelativeLayout parentLayout;

  @NonNull
  public final TextView skillClearBtn;

  @NonNull
  public final RecyclerView skillingFiltersList;

  @NonNull
  public final SwipeRefreshLayout swipeContainerContentFeeds;

  private ContentFeedsLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView categoryFilterList, @NonNull RecyclerView feedsList,
      @NonNull View grayOverlayLayout, @NonNull ProgressBar loadingProgressBookMarks,
      @NonNull TextView noBookMarks, @NonNull RelativeLayout parentLayout,
      @NonNull TextView skillClearBtn, @NonNull RecyclerView skillingFiltersList,
      @NonNull SwipeRefreshLayout swipeContainerContentFeeds) {
    this.rootView = rootView;
    this.categoryFilterList = categoryFilterList;
    this.feedsList = feedsList;
    this.grayOverlayLayout = grayOverlayLayout;
    this.loadingProgressBookMarks = loadingProgressBookMarks;
    this.noBookMarks = noBookMarks;
    this.parentLayout = parentLayout;
    this.skillClearBtn = skillClearBtn;
    this.skillingFiltersList = skillingFiltersList;
    this.swipeContainerContentFeeds = swipeContainerContentFeeds;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentFeedsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentFeedsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_feeds_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentFeedsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_filter_list;
      RecyclerView categoryFilterList = ViewBindings.findChildViewById(rootView, id);
      if (categoryFilterList == null) {
        break missingId;
      }

      id = R.id.feeds_list;
      RecyclerView feedsList = ViewBindings.findChildViewById(rootView, id);
      if (feedsList == null) {
        break missingId;
      }

      id = R.id.grayOverlayLayout;
      View grayOverlayLayout = ViewBindings.findChildViewById(rootView, id);
      if (grayOverlayLayout == null) {
        break missingId;
      }

      id = R.id.loading_progress_bookMarks;
      ProgressBar loadingProgressBookMarks = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBookMarks == null) {
        break missingId;
      }

      id = R.id.no_bookMarks;
      TextView noBookMarks = ViewBindings.findChildViewById(rootView, id);
      if (noBookMarks == null) {
        break missingId;
      }

      RelativeLayout parentLayout = (RelativeLayout) rootView;

      id = R.id.skillClearBtn;
      TextView skillClearBtn = ViewBindings.findChildViewById(rootView, id);
      if (skillClearBtn == null) {
        break missingId;
      }

      id = R.id.skilling_filters_list;
      RecyclerView skillingFiltersList = ViewBindings.findChildViewById(rootView, id);
      if (skillingFiltersList == null) {
        break missingId;
      }

      id = R.id.swipeContainer_content_feeds;
      SwipeRefreshLayout swipeContainerContentFeeds = ViewBindings.findChildViewById(rootView, id);
      if (swipeContainerContentFeeds == null) {
        break missingId;
      }

      return new ContentFeedsLayoutBinding((RelativeLayout) rootView, categoryFilterList, feedsList,
          grayOverlayLayout, loadingProgressBookMarks, noBookMarks, parentLayout, skillClearBtn,
          skillingFiltersList, swipeContainerContentFeeds);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
