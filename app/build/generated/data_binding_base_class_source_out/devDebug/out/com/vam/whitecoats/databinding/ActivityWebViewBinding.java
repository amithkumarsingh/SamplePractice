// Generated by data binding compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.vam.whitecoats.R;
import com.vam.whitecoats.viewmodel.WebViewViewModel;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityWebViewBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView aviInUrl;

  @NonNull
  public final RelativeLayout webContentLayout;

  @NonNull
  public final LinearLayout webLinearLayout;

  @NonNull
  public final WebView webViewUrl;

  @Bindable
  protected WebViewViewModel mViewModel;

  protected ActivityWebViewBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AVLoadingIndicatorView aviInUrl, RelativeLayout webContentLayout,
      LinearLayout webLinearLayout, WebView webViewUrl) {
    super(_bindingComponent, _root, _localFieldCount);
    this.aviInUrl = aviInUrl;
    this.webContentLayout = webContentLayout;
    this.webLinearLayout = webLinearLayout;
    this.webViewUrl = webViewUrl;
  }

  public abstract void setViewModel(@Nullable WebViewViewModel viewModel);

  @Nullable
  public WebViewViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityWebViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_web_view, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityWebViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityWebViewBinding>inflateInternal(inflater, R.layout.activity_web_view, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityWebViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_web_view, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityWebViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityWebViewBinding>inflateInternal(inflater, R.layout.activity_web_view, null, false, component);
  }

  public static ActivityWebViewBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityWebViewBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityWebViewBinding)bind(component, view, R.layout.activity_web_view);
  }
}
