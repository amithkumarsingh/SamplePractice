// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclelayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView channelRecyclerView;

  @NonNull
  public final RelativeLayout dashBoard;

  @NonNull
  public final LinearLayout dashboardParentLayout;

  @NonNull
  public final ImageButton dashboardmakepost;

  @NonNull
  public final TextView feedsErrormsg;

  @NonNull
  public final Button newUpdatesBtn;

  @NonNull
  public final PostAnUpdateLayoutBinding postUpdateDashboard;

  @NonNull
  public final SwipeRefreshLayout swipeContainer;

  private RecyclelayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView channelRecyclerView, @NonNull RelativeLayout dashBoard,
      @NonNull LinearLayout dashboardParentLayout, @NonNull ImageButton dashboardmakepost,
      @NonNull TextView feedsErrormsg, @NonNull Button newUpdatesBtn,
      @NonNull PostAnUpdateLayoutBinding postUpdateDashboard,
      @NonNull SwipeRefreshLayout swipeContainer) {
    this.rootView = rootView;
    this.channelRecyclerView = channelRecyclerView;
    this.dashBoard = dashBoard;
    this.dashboardParentLayout = dashboardParentLayout;
    this.dashboardmakepost = dashboardmakepost;
    this.feedsErrormsg = feedsErrormsg;
    this.newUpdatesBtn = newUpdatesBtn;
    this.postUpdateDashboard = postUpdateDashboard;
    this.swipeContainer = swipeContainer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclelayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclelayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclelayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclelayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.channel_recycler_view;
      RecyclerView channelRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (channelRecyclerView == null) {
        break missingId;
      }

      RelativeLayout dashBoard = (RelativeLayout) rootView;

      id = R.id.dashboardParentLayout;
      LinearLayout dashboardParentLayout = ViewBindings.findChildViewById(rootView, id);
      if (dashboardParentLayout == null) {
        break missingId;
      }

      id = R.id.dashboardmakepost;
      ImageButton dashboardmakepost = ViewBindings.findChildViewById(rootView, id);
      if (dashboardmakepost == null) {
        break missingId;
      }

      id = R.id.feeds_errormsg;
      TextView feedsErrormsg = ViewBindings.findChildViewById(rootView, id);
      if (feedsErrormsg == null) {
        break missingId;
      }

      id = R.id.new_updates_btn;
      Button newUpdatesBtn = ViewBindings.findChildViewById(rootView, id);
      if (newUpdatesBtn == null) {
        break missingId;
      }

      id = R.id.post_update_dashboard;
      View postUpdateDashboard = ViewBindings.findChildViewById(rootView, id);
      if (postUpdateDashboard == null) {
        break missingId;
      }
      PostAnUpdateLayoutBinding binding_postUpdateDashboard = PostAnUpdateLayoutBinding.bind(postUpdateDashboard);

      id = R.id.swipeContainer;
      SwipeRefreshLayout swipeContainer = ViewBindings.findChildViewById(rootView, id);
      if (swipeContainer == null) {
        break missingId;
      }

      return new RecyclelayoutBinding((RelativeLayout) rootView, channelRecyclerView, dashBoard,
          dashboardParentLayout, dashboardmakepost, feedsErrormsg, newUpdatesBtn,
          binding_postUpdateDashboard, swipeContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
