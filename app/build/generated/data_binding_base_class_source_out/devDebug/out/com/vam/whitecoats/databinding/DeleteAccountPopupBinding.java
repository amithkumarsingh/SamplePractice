// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeleteAccountPopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelBtn;

  @NonNull
  public final TextView confirmTv;

  @NonNull
  public final Button deleteBtn;

  @NonNull
  public final ConstraintLayout deleteConfirmCl;

  @NonNull
  public final ConstraintLayout deleteProgressCl;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextView irreversibleTv;

  @NonNull
  public final ProgressBar progressBar2;

  private DeleteAccountPopupBinding(@NonNull ConstraintLayout rootView, @NonNull Button cancelBtn,
      @NonNull TextView confirmTv, @NonNull Button deleteBtn,
      @NonNull ConstraintLayout deleteConfirmCl, @NonNull ConstraintLayout deleteProgressCl,
      @NonNull ImageView imageView2, @NonNull TextView irreversibleTv,
      @NonNull ProgressBar progressBar2) {
    this.rootView = rootView;
    this.cancelBtn = cancelBtn;
    this.confirmTv = confirmTv;
    this.deleteBtn = deleteBtn;
    this.deleteConfirmCl = deleteConfirmCl;
    this.deleteProgressCl = deleteProgressCl;
    this.imageView2 = imageView2;
    this.irreversibleTv = irreversibleTv;
    this.progressBar2 = progressBar2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeleteAccountPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeleteAccountPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delete_account_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeleteAccountPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_btn;
      Button cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      id = R.id.confirm_tv;
      TextView confirmTv = ViewBindings.findChildViewById(rootView, id);
      if (confirmTv == null) {
        break missingId;
      }

      id = R.id.delete_btn;
      Button deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.delete_confirm_cl;
      ConstraintLayout deleteConfirmCl = ViewBindings.findChildViewById(rootView, id);
      if (deleteConfirmCl == null) {
        break missingId;
      }

      id = R.id.delete_progress_cl;
      ConstraintLayout deleteProgressCl = ViewBindings.findChildViewById(rootView, id);
      if (deleteProgressCl == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.irreversible_tv;
      TextView irreversibleTv = ViewBindings.findChildViewById(rootView, id);
      if (irreversibleTv == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      return new DeleteAccountPopupBinding((ConstraintLayout) rootView, cancelBtn, confirmTv,
          deleteBtn, deleteConfirmCl, deleteProgressCl, imageView2, irreversibleTv, progressBar2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
