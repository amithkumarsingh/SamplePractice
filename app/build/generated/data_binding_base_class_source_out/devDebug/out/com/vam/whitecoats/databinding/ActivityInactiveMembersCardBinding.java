// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInactiveMembersCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView cardContactId;

  @NonNull
  public final TextView cardEmailId;

  @NonNull
  public final TextView communityName;

  @NonNull
  public final TextView department;

  @NonNull
  public final TextView designation;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final TextView inactiveText;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView speciality;

  @NonNull
  public final TextView workplace;

  private ActivityInactiveMembersCardBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView cardContactId, @NonNull TextView cardEmailId,
      @NonNull TextView communityName, @NonNull TextView department, @NonNull TextView designation,
      @NonNull TextView doctorName, @NonNull TextView inactiveText, @NonNull TextView location,
      @NonNull TextView speciality, @NonNull TextView workplace) {
    this.rootView = rootView;
    this.cardContactId = cardContactId;
    this.cardEmailId = cardEmailId;
    this.communityName = communityName;
    this.department = department;
    this.designation = designation;
    this.doctorName = doctorName;
    this.inactiveText = inactiveText;
    this.location = location;
    this.speciality = speciality;
    this.workplace = workplace;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInactiveMembersCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInactiveMembersCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_inactive_members_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInactiveMembersCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_contact_id;
      TextView cardContactId = ViewBindings.findChildViewById(rootView, id);
      if (cardContactId == null) {
        break missingId;
      }

      id = R.id.card_email_id;
      TextView cardEmailId = ViewBindings.findChildViewById(rootView, id);
      if (cardEmailId == null) {
        break missingId;
      }

      id = R.id.community_name;
      TextView communityName = ViewBindings.findChildViewById(rootView, id);
      if (communityName == null) {
        break missingId;
      }

      id = R.id.department;
      TextView department = ViewBindings.findChildViewById(rootView, id);
      if (department == null) {
        break missingId;
      }

      id = R.id.designation;
      TextView designation = ViewBindings.findChildViewById(rootView, id);
      if (designation == null) {
        break missingId;
      }

      id = R.id.doctor_name;
      TextView doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.inactiveText;
      TextView inactiveText = ViewBindings.findChildViewById(rootView, id);
      if (inactiveText == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.speciality;
      TextView speciality = ViewBindings.findChildViewById(rootView, id);
      if (speciality == null) {
        break missingId;
      }

      id = R.id.workplace;
      TextView workplace = ViewBindings.findChildViewById(rootView, id);
      if (workplace == null) {
        break missingId;
      }

      return new ActivityInactiveMembersCardBinding((RelativeLayout) rootView, cardContactId,
          cardEmailId, communityName, department, designation, doctorName, inactiveText, location,
          speciality, workplace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
