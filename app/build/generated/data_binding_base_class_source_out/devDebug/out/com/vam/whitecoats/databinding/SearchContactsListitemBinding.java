// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchContactsListitemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView chatImg;

  @NonNull
  public final TextView connectText;

  @NonNull
  public final Button followBtn;

  @NonNull
  public final RoundedImageView imageurl;

  @NonNull
  public final TextView nameTxt;

  @NonNull
  public final TextView specialityTxt;

  @NonNull
  public final RelativeLayout statusLayout;

  @NonNull
  public final RelativeLayout tileLayout;

  private SearchContactsListitemBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView chatImg, @NonNull TextView connectText, @NonNull Button followBtn,
      @NonNull RoundedImageView imageurl, @NonNull TextView nameTxt,
      @NonNull TextView specialityTxt, @NonNull RelativeLayout statusLayout,
      @NonNull RelativeLayout tileLayout) {
    this.rootView = rootView;
    this.chatImg = chatImg;
    this.connectText = connectText;
    this.followBtn = followBtn;
    this.imageurl = imageurl;
    this.nameTxt = nameTxt;
    this.specialityTxt = specialityTxt;
    this.statusLayout = statusLayout;
    this.tileLayout = tileLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchContactsListitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchContactsListitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.search_contacts_listitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchContactsListitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_img;
      ImageView chatImg = ViewBindings.findChildViewById(rootView, id);
      if (chatImg == null) {
        break missingId;
      }

      id = R.id.connect_text;
      TextView connectText = ViewBindings.findChildViewById(rootView, id);
      if (connectText == null) {
        break missingId;
      }

      id = R.id.followBtn;
      Button followBtn = ViewBindings.findChildViewById(rootView, id);
      if (followBtn == null) {
        break missingId;
      }

      id = R.id.imageurl;
      RoundedImageView imageurl = ViewBindings.findChildViewById(rootView, id);
      if (imageurl == null) {
        break missingId;
      }

      id = R.id.name_txt;
      TextView nameTxt = ViewBindings.findChildViewById(rootView, id);
      if (nameTxt == null) {
        break missingId;
      }

      id = R.id.speciality_txt;
      TextView specialityTxt = ViewBindings.findChildViewById(rootView, id);
      if (specialityTxt == null) {
        break missingId;
      }

      id = R.id.status_layout;
      RelativeLayout statusLayout = ViewBindings.findChildViewById(rootView, id);
      if (statusLayout == null) {
        break missingId;
      }

      id = R.id.tile_layout;
      RelativeLayout tileLayout = ViewBindings.findChildViewById(rootView, id);
      if (tileLayout == null) {
        break missingId;
      }

      return new SearchContactsListitemBinding((RelativeLayout) rootView, chatImg, connectText,
          followBtn, imageurl, nameTxt, specialityTxt, statusLayout, tileLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
