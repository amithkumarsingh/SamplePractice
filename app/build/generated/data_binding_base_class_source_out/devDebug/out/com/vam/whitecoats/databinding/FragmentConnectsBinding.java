// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConnectsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView deviceNotificationOnCv1;

  @NonNull
  public final RecyclerView notifyConnectsList;

  @NonNull
  public final TextView notifyTextconnects;

  private FragmentConnectsBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView deviceNotificationOnCv1, @NonNull RecyclerView notifyConnectsList,
      @NonNull TextView notifyTextconnects) {
    this.rootView = rootView;
    this.deviceNotificationOnCv1 = deviceNotificationOnCv1;
    this.notifyConnectsList = notifyConnectsList;
    this.notifyTextconnects = notifyTextconnects;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConnectsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConnectsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_connects, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConnectsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.device_notification_on_cv1;
      CardView deviceNotificationOnCv1 = ViewBindings.findChildViewById(rootView, id);
      if (deviceNotificationOnCv1 == null) {
        break missingId;
      }

      id = R.id.notify_connects_list;
      RecyclerView notifyConnectsList = ViewBindings.findChildViewById(rootView, id);
      if (notifyConnectsList == null) {
        break missingId;
      }

      id = R.id.notify_textconnects;
      TextView notifyTextconnects = ViewBindings.findChildViewById(rootView, id);
      if (notifyTextconnects == null) {
        break missingId;
      }

      return new FragmentConnectsBinding((RelativeLayout) rootView, deviceNotificationOnCv1,
          notifyConnectsList, notifyTextconnects);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
