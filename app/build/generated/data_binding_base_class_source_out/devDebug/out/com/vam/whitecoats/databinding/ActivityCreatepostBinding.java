// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.NonScrollableGridView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreatepostBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appliesToInputLayout;

  @NonNull
  public final LinearLayout appliesToLayout;

  @NonNull
  public final RelativeLayout appliesToRelativeLayout;

  @NonNull
  public final RelativeLayout communityFormLayout;

  @NonNull
  public final RelativeLayout communityFormRelativeLayout;

  @NonNull
  public final TextView departmentHeading;

  @NonNull
  public final EditText descEdtTxt;

  @NonNull
  public final TextView descriptionHintText;

  @NonNull
  public final LinearLayout descriptionLayout;

  @NonNull
  public final RelativeLayout exampleLayout;

  @NonNull
  public final TextView exampleTextView;

  @NonNull
  public final TextView helpTxtVw;

  @NonNull
  public final LinearLayout postAttachment;

  @NonNull
  public final LinearLayout postAttachmentLayout;

  @NonNull
  public final NonScrollableGridView postGridview;

  @NonNull
  public final TextView postImg;

  @NonNull
  public final RelativeLayout postLayout;

  @NonNull
  public final TextView postMaximgs;

  @NonNull
  public final RelativeLayout postRelativeLayout;

  @NonNull
  public final EditText postToEdtTxt;

  @NonNull
  public final TextView postToInputLayout;

  @NonNull
  public final LinearLayout postToLayout;

  @NonNull
  public final TextView postTypeText;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RelativeLayout radioGroupLay;

  @NonNull
  public final TextView shareWithHeading;

  @NonNull
  public final RelativeLayout shareWithLabel;

  @NonNull
  public final RelativeLayout shareWithLayout;

  @NonNull
  public final RelativeLayout shareWithMainLayout;

  @NonNull
  public final TextView sharewithOptionText;

  @NonNull
  public final EditText specialityEdtTxt;

  @NonNull
  public final TextView titleCharLimit;

  @NonNull
  public final EditText titleEdtTxtUpdate;

  @NonNull
  public final TextView titleErrorUpdate;

  @NonNull
  public final TextView titleHintText;

  @NonNull
  public final LinearLayout titleLayout;

  @NonNull
  public final LinearLayout titleUpdatesLayout;

  private ActivityCreatepostBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView appliesToInputLayout, @NonNull LinearLayout appliesToLayout,
      @NonNull RelativeLayout appliesToRelativeLayout, @NonNull RelativeLayout communityFormLayout,
      @NonNull RelativeLayout communityFormRelativeLayout, @NonNull TextView departmentHeading,
      @NonNull EditText descEdtTxt, @NonNull TextView descriptionHintText,
      @NonNull LinearLayout descriptionLayout, @NonNull RelativeLayout exampleLayout,
      @NonNull TextView exampleTextView, @NonNull TextView helpTxtVw,
      @NonNull LinearLayout postAttachment, @NonNull LinearLayout postAttachmentLayout,
      @NonNull NonScrollableGridView postGridview, @NonNull TextView postImg,
      @NonNull RelativeLayout postLayout, @NonNull TextView postMaximgs,
      @NonNull RelativeLayout postRelativeLayout, @NonNull EditText postToEdtTxt,
      @NonNull TextView postToInputLayout, @NonNull LinearLayout postToLayout,
      @NonNull TextView postTypeText, @NonNull RadioGroup radioGroup,
      @NonNull RelativeLayout radioGroupLay, @NonNull TextView shareWithHeading,
      @NonNull RelativeLayout shareWithLabel, @NonNull RelativeLayout shareWithLayout,
      @NonNull RelativeLayout shareWithMainLayout, @NonNull TextView sharewithOptionText,
      @NonNull EditText specialityEdtTxt, @NonNull TextView titleCharLimit,
      @NonNull EditText titleEdtTxtUpdate, @NonNull TextView titleErrorUpdate,
      @NonNull TextView titleHintText, @NonNull LinearLayout titleLayout,
      @NonNull LinearLayout titleUpdatesLayout) {
    this.rootView = rootView;
    this.appliesToInputLayout = appliesToInputLayout;
    this.appliesToLayout = appliesToLayout;
    this.appliesToRelativeLayout = appliesToRelativeLayout;
    this.communityFormLayout = communityFormLayout;
    this.communityFormRelativeLayout = communityFormRelativeLayout;
    this.departmentHeading = departmentHeading;
    this.descEdtTxt = descEdtTxt;
    this.descriptionHintText = descriptionHintText;
    this.descriptionLayout = descriptionLayout;
    this.exampleLayout = exampleLayout;
    this.exampleTextView = exampleTextView;
    this.helpTxtVw = helpTxtVw;
    this.postAttachment = postAttachment;
    this.postAttachmentLayout = postAttachmentLayout;
    this.postGridview = postGridview;
    this.postImg = postImg;
    this.postLayout = postLayout;
    this.postMaximgs = postMaximgs;
    this.postRelativeLayout = postRelativeLayout;
    this.postToEdtTxt = postToEdtTxt;
    this.postToInputLayout = postToInputLayout;
    this.postToLayout = postToLayout;
    this.postTypeText = postTypeText;
    this.radioGroup = radioGroup;
    this.radioGroupLay = radioGroupLay;
    this.shareWithHeading = shareWithHeading;
    this.shareWithLabel = shareWithLabel;
    this.shareWithLayout = shareWithLayout;
    this.shareWithMainLayout = shareWithMainLayout;
    this.sharewithOptionText = sharewithOptionText;
    this.specialityEdtTxt = specialityEdtTxt;
    this.titleCharLimit = titleCharLimit;
    this.titleEdtTxtUpdate = titleEdtTxtUpdate;
    this.titleErrorUpdate = titleErrorUpdate;
    this.titleHintText = titleHintText;
    this.titleLayout = titleLayout;
    this.titleUpdatesLayout = titleUpdatesLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreatepostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreatepostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_createpost, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreatepostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appliesToInputLayout;
      TextView appliesToInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (appliesToInputLayout == null) {
        break missingId;
      }

      id = R.id.appliesToLayout;
      LinearLayout appliesToLayout = ViewBindings.findChildViewById(rootView, id);
      if (appliesToLayout == null) {
        break missingId;
      }

      id = R.id.appliesToRelativeLayout;
      RelativeLayout appliesToRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (appliesToRelativeLayout == null) {
        break missingId;
      }

      id = R.id.communityFormLayout;
      RelativeLayout communityFormLayout = ViewBindings.findChildViewById(rootView, id);
      if (communityFormLayout == null) {
        break missingId;
      }

      id = R.id.communityFormRelativeLayout;
      RelativeLayout communityFormRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (communityFormRelativeLayout == null) {
        break missingId;
      }

      id = R.id.departmentHeading;
      TextView departmentHeading = ViewBindings.findChildViewById(rootView, id);
      if (departmentHeading == null) {
        break missingId;
      }

      id = R.id.descEdtTxt;
      EditText descEdtTxt = ViewBindings.findChildViewById(rootView, id);
      if (descEdtTxt == null) {
        break missingId;
      }

      id = R.id.descriptionHintText;
      TextView descriptionHintText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionHintText == null) {
        break missingId;
      }

      id = R.id.descriptionLayout;
      LinearLayout descriptionLayout = ViewBindings.findChildViewById(rootView, id);
      if (descriptionLayout == null) {
        break missingId;
      }

      id = R.id.exampleLayout;
      RelativeLayout exampleLayout = ViewBindings.findChildViewById(rootView, id);
      if (exampleLayout == null) {
        break missingId;
      }

      id = R.id.exampleTextView;
      TextView exampleTextView = ViewBindings.findChildViewById(rootView, id);
      if (exampleTextView == null) {
        break missingId;
      }

      id = R.id.helpTxtVw;
      TextView helpTxtVw = ViewBindings.findChildViewById(rootView, id);
      if (helpTxtVw == null) {
        break missingId;
      }

      id = R.id.post_attachment;
      LinearLayout postAttachment = ViewBindings.findChildViewById(rootView, id);
      if (postAttachment == null) {
        break missingId;
      }

      id = R.id.postAttachmentLayout;
      LinearLayout postAttachmentLayout = ViewBindings.findChildViewById(rootView, id);
      if (postAttachmentLayout == null) {
        break missingId;
      }

      id = R.id.post_gridview;
      NonScrollableGridView postGridview = ViewBindings.findChildViewById(rootView, id);
      if (postGridview == null) {
        break missingId;
      }

      id = R.id.post_img;
      TextView postImg = ViewBindings.findChildViewById(rootView, id);
      if (postImg == null) {
        break missingId;
      }

      id = R.id.postLayout;
      RelativeLayout postLayout = ViewBindings.findChildViewById(rootView, id);
      if (postLayout == null) {
        break missingId;
      }

      id = R.id.post_maximgs;
      TextView postMaximgs = ViewBindings.findChildViewById(rootView, id);
      if (postMaximgs == null) {
        break missingId;
      }

      id = R.id.postRelativeLayout;
      RelativeLayout postRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (postRelativeLayout == null) {
        break missingId;
      }

      id = R.id.postToEdtTxt;
      EditText postToEdtTxt = ViewBindings.findChildViewById(rootView, id);
      if (postToEdtTxt == null) {
        break missingId;
      }

      id = R.id.postToInputLayout;
      TextView postToInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (postToInputLayout == null) {
        break missingId;
      }

      id = R.id.postToLayout;
      LinearLayout postToLayout = ViewBindings.findChildViewById(rootView, id);
      if (postToLayout == null) {
        break missingId;
      }

      id = R.id.post_type_text;
      TextView postTypeText = ViewBindings.findChildViewById(rootView, id);
      if (postTypeText == null) {
        break missingId;
      }

      id = R.id.radio_group;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.radioGroup_lay;
      RelativeLayout radioGroupLay = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupLay == null) {
        break missingId;
      }

      id = R.id.shareWithHeading;
      TextView shareWithHeading = ViewBindings.findChildViewById(rootView, id);
      if (shareWithHeading == null) {
        break missingId;
      }

      id = R.id.shareWithLabel;
      RelativeLayout shareWithLabel = ViewBindings.findChildViewById(rootView, id);
      if (shareWithLabel == null) {
        break missingId;
      }

      id = R.id.shareWithLayout;
      RelativeLayout shareWithLayout = ViewBindings.findChildViewById(rootView, id);
      if (shareWithLayout == null) {
        break missingId;
      }

      id = R.id.shareWithMainLayout;
      RelativeLayout shareWithMainLayout = ViewBindings.findChildViewById(rootView, id);
      if (shareWithMainLayout == null) {
        break missingId;
      }

      id = R.id.sharewith_option_text;
      TextView sharewithOptionText = ViewBindings.findChildViewById(rootView, id);
      if (sharewithOptionText == null) {
        break missingId;
      }

      id = R.id.specialityEdtTxt;
      EditText specialityEdtTxt = ViewBindings.findChildViewById(rootView, id);
      if (specialityEdtTxt == null) {
        break missingId;
      }

      id = R.id.titleCharLimit;
      TextView titleCharLimit = ViewBindings.findChildViewById(rootView, id);
      if (titleCharLimit == null) {
        break missingId;
      }

      id = R.id.titleEdtTxt_update;
      EditText titleEdtTxtUpdate = ViewBindings.findChildViewById(rootView, id);
      if (titleEdtTxtUpdate == null) {
        break missingId;
      }

      id = R.id.title_error_update;
      TextView titleErrorUpdate = ViewBindings.findChildViewById(rootView, id);
      if (titleErrorUpdate == null) {
        break missingId;
      }

      id = R.id.titleHintText;
      TextView titleHintText = ViewBindings.findChildViewById(rootView, id);
      if (titleHintText == null) {
        break missingId;
      }

      id = R.id.titleLayout;
      LinearLayout titleLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleLayout == null) {
        break missingId;
      }

      id = R.id.title_updates_layout;
      LinearLayout titleUpdatesLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleUpdatesLayout == null) {
        break missingId;
      }

      return new ActivityCreatepostBinding((RelativeLayout) rootView, appliesToInputLayout,
          appliesToLayout, appliesToRelativeLayout, communityFormLayout,
          communityFormRelativeLayout, departmentHeading, descEdtTxt, descriptionHintText,
          descriptionLayout, exampleLayout, exampleTextView, helpTxtVw, postAttachment,
          postAttachmentLayout, postGridview, postImg, postLayout, postMaximgs, postRelativeLayout,
          postToEdtTxt, postToInputLayout, postToLayout, postTypeText, radioGroup, radioGroupLay,
          shareWithHeading, shareWithLabel, shareWithLayout, shareWithMainLayout,
          sharewithOptionText, specialityEdtTxt, titleCharLimit, titleEdtTxtUpdate,
          titleErrorUpdate, titleHintText, titleLayout, titleUpdatesLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
