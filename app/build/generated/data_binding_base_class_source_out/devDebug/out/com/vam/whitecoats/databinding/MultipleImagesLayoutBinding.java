// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MultipleImagesLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView attachmentIcon;

  @NonNull
  public final ImageView attachmentIcon1;

  @NonNull
  public final ImageView attachmentIcon2;

  @NonNull
  public final ImageView attachmentVideoType;

  @NonNull
  public final ImageView attachmentVideoType1;

  @NonNull
  public final ImageView attachmentVideoType2;

  @NonNull
  public final ImageView communityImage;

  @NonNull
  public final TextView remainingImagesCount;

  @NonNull
  public final ImageView secondImageofCommunity;

  @NonNull
  public final FrameLayout singleImageLay;

  @NonNull
  public final ImageView thirdImageofCommunity;

  private MultipleImagesLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView attachmentIcon, @NonNull ImageView attachmentIcon1,
      @NonNull ImageView attachmentIcon2, @NonNull ImageView attachmentVideoType,
      @NonNull ImageView attachmentVideoType1, @NonNull ImageView attachmentVideoType2,
      @NonNull ImageView communityImage, @NonNull TextView remainingImagesCount,
      @NonNull ImageView secondImageofCommunity, @NonNull FrameLayout singleImageLay,
      @NonNull ImageView thirdImageofCommunity) {
    this.rootView = rootView;
    this.attachmentIcon = attachmentIcon;
    this.attachmentIcon1 = attachmentIcon1;
    this.attachmentIcon2 = attachmentIcon2;
    this.attachmentVideoType = attachmentVideoType;
    this.attachmentVideoType1 = attachmentVideoType1;
    this.attachmentVideoType2 = attachmentVideoType2;
    this.communityImage = communityImage;
    this.remainingImagesCount = remainingImagesCount;
    this.secondImageofCommunity = secondImageofCommunity;
    this.singleImageLay = singleImageLay;
    this.thirdImageofCommunity = thirdImageofCommunity;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MultipleImagesLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MultipleImagesLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.multiple_images_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MultipleImagesLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachment_icon;
      ImageView attachmentIcon = ViewBindings.findChildViewById(rootView, id);
      if (attachmentIcon == null) {
        break missingId;
      }

      id = R.id.attachment_icon1;
      ImageView attachmentIcon1 = ViewBindings.findChildViewById(rootView, id);
      if (attachmentIcon1 == null) {
        break missingId;
      }

      id = R.id.attachment_icon2;
      ImageView attachmentIcon2 = ViewBindings.findChildViewById(rootView, id);
      if (attachmentIcon2 == null) {
        break missingId;
      }

      id = R.id.attachment_video_type;
      ImageView attachmentVideoType = ViewBindings.findChildViewById(rootView, id);
      if (attachmentVideoType == null) {
        break missingId;
      }

      id = R.id.attachment_video_type1;
      ImageView attachmentVideoType1 = ViewBindings.findChildViewById(rootView, id);
      if (attachmentVideoType1 == null) {
        break missingId;
      }

      id = R.id.attachment_video_type2;
      ImageView attachmentVideoType2 = ViewBindings.findChildViewById(rootView, id);
      if (attachmentVideoType2 == null) {
        break missingId;
      }

      id = R.id.communityImage;
      ImageView communityImage = ViewBindings.findChildViewById(rootView, id);
      if (communityImage == null) {
        break missingId;
      }

      id = R.id.remaining_images_count;
      TextView remainingImagesCount = ViewBindings.findChildViewById(rootView, id);
      if (remainingImagesCount == null) {
        break missingId;
      }

      id = R.id.secondImageofCommunity;
      ImageView secondImageofCommunity = ViewBindings.findChildViewById(rootView, id);
      if (secondImageofCommunity == null) {
        break missingId;
      }

      id = R.id.single_image_lay;
      FrameLayout singleImageLay = ViewBindings.findChildViewById(rootView, id);
      if (singleImageLay == null) {
        break missingId;
      }

      id = R.id.thirdImageofCommunity;
      ImageView thirdImageofCommunity = ViewBindings.findChildViewById(rootView, id);
      if (thirdImageofCommunity == null) {
        break missingId;
      }

      return new MultipleImagesLayoutBinding((RelativeLayout) rootView, attachmentIcon,
          attachmentIcon1, attachmentIcon2, attachmentVideoType, attachmentVideoType1,
          attachmentVideoType2, communityImage, remainingImagesCount, secondImageofCommunity,
          singleImageLay, thirdImageofCommunity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
