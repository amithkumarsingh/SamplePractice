// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.AutoFillDisableEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterationScreenOneBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout activityRegisterationScreenOne;

  @NonNull
  public final TextView agreementText;

  @NonNull
  public final TextView andrstrText;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final CheckBox check;

  @NonNull
  public final TextView checkErrorText;

  @NonNull
  public final LinearLayout countrycodeLay;

  @NonNull
  public final LinearLayout countrycodeMobilenumLay;

  @NonNull
  public final EditText createPassword;

  @NonNull
  public final FrameLayout createPasswordLay;

  @NonNull
  public final TextView createpsswrdErrorText;

  @NonNull
  public final TextView dashTextDetails;

  @NonNull
  public final EditText emailId;

  @NonNull
  public final TextView emailIdErrorText;

  @NonNull
  public final TextInputLayout emailidLay;

  @NonNull
  public final LinearLayout firstNameLastnameLay;

  @NonNull
  public final LinearLayout firstNameLay;

  @NonNull
  public final TextView firstnameErrorText;

  @NonNull
  public final AutoFillDisableEditText firstnameId;

  @NonNull
  public final TextView lastnameErrorText;

  @NonNull
  public final AutoFillDisableEditText lastnameId;

  @NonNull
  public final LinearLayout mobilenumLay;

  @NonNull
  public final TextView phoneNumberErrorText;

  @NonNull
  public final TextInputLayout phoneNumberLay;

  @NonNull
  public final EditText phoneNumberReg;

  @NonNull
  public final TextView policiesText;

  @NonNull
  public final Button pswdTransformationBtn;

  @NonNull
  public final Button regSubmit;

  @NonNull
  public final Spinner saluationSpinner;

  @NonNull
  public final AutoCompleteTextView specialityAutoCompleteTextView;

  @NonNull
  public final TextView specialityErrorText;

  @NonNull
  public final TextInputLayout specialityLay;

  @NonNull
  public final RelativeLayout termsPolicyLay;

  @NonNull
  public final TextView termsText;

  @NonNull
  public final TextInputLayout textInputLayout;

  private ActivityRegisterationScreenOneBinding(@NonNull ScrollView rootView,
      @NonNull RelativeLayout activityRegisterationScreenOne, @NonNull TextView agreementText,
      @NonNull TextView andrstrText, @NonNull CountryCodePicker ccp, @NonNull CheckBox check,
      @NonNull TextView checkErrorText, @NonNull LinearLayout countrycodeLay,
      @NonNull LinearLayout countrycodeMobilenumLay, @NonNull EditText createPassword,
      @NonNull FrameLayout createPasswordLay, @NonNull TextView createpsswrdErrorText,
      @NonNull TextView dashTextDetails, @NonNull EditText emailId,
      @NonNull TextView emailIdErrorText, @NonNull TextInputLayout emailidLay,
      @NonNull LinearLayout firstNameLastnameLay, @NonNull LinearLayout firstNameLay,
      @NonNull TextView firstnameErrorText, @NonNull AutoFillDisableEditText firstnameId,
      @NonNull TextView lastnameErrorText, @NonNull AutoFillDisableEditText lastnameId,
      @NonNull LinearLayout mobilenumLay, @NonNull TextView phoneNumberErrorText,
      @NonNull TextInputLayout phoneNumberLay, @NonNull EditText phoneNumberReg,
      @NonNull TextView policiesText, @NonNull Button pswdTransformationBtn,
      @NonNull Button regSubmit, @NonNull Spinner saluationSpinner,
      @NonNull AutoCompleteTextView specialityAutoCompleteTextView,
      @NonNull TextView specialityErrorText, @NonNull TextInputLayout specialityLay,
      @NonNull RelativeLayout termsPolicyLay, @NonNull TextView termsText,
      @NonNull TextInputLayout textInputLayout) {
    this.rootView = rootView;
    this.activityRegisterationScreenOne = activityRegisterationScreenOne;
    this.agreementText = agreementText;
    this.andrstrText = andrstrText;
    this.ccp = ccp;
    this.check = check;
    this.checkErrorText = checkErrorText;
    this.countrycodeLay = countrycodeLay;
    this.countrycodeMobilenumLay = countrycodeMobilenumLay;
    this.createPassword = createPassword;
    this.createPasswordLay = createPasswordLay;
    this.createpsswrdErrorText = createpsswrdErrorText;
    this.dashTextDetails = dashTextDetails;
    this.emailId = emailId;
    this.emailIdErrorText = emailIdErrorText;
    this.emailidLay = emailidLay;
    this.firstNameLastnameLay = firstNameLastnameLay;
    this.firstNameLay = firstNameLay;
    this.firstnameErrorText = firstnameErrorText;
    this.firstnameId = firstnameId;
    this.lastnameErrorText = lastnameErrorText;
    this.lastnameId = lastnameId;
    this.mobilenumLay = mobilenumLay;
    this.phoneNumberErrorText = phoneNumberErrorText;
    this.phoneNumberLay = phoneNumberLay;
    this.phoneNumberReg = phoneNumberReg;
    this.policiesText = policiesText;
    this.pswdTransformationBtn = pswdTransformationBtn;
    this.regSubmit = regSubmit;
    this.saluationSpinner = saluationSpinner;
    this.specialityAutoCompleteTextView = specialityAutoCompleteTextView;
    this.specialityErrorText = specialityErrorText;
    this.specialityLay = specialityLay;
    this.termsPolicyLay = termsPolicyLay;
    this.termsText = termsText;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterationScreenOneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterationScreenOneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registeration_screen_one, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterationScreenOneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_registeration_screen_one;
      RelativeLayout activityRegisterationScreenOne = ViewBindings.findChildViewById(rootView, id);
      if (activityRegisterationScreenOne == null) {
        break missingId;
      }

      id = R.id.agreement_text;
      TextView agreementText = ViewBindings.findChildViewById(rootView, id);
      if (agreementText == null) {
        break missingId;
      }

      id = R.id.andrstr_text;
      TextView andrstrText = ViewBindings.findChildViewById(rootView, id);
      if (andrstrText == null) {
        break missingId;
      }

      id = R.id.ccp;
      CountryCodePicker ccp = ViewBindings.findChildViewById(rootView, id);
      if (ccp == null) {
        break missingId;
      }

      id = R.id.check;
      CheckBox check = ViewBindings.findChildViewById(rootView, id);
      if (check == null) {
        break missingId;
      }

      id = R.id.check_error_text;
      TextView checkErrorText = ViewBindings.findChildViewById(rootView, id);
      if (checkErrorText == null) {
        break missingId;
      }

      id = R.id.countrycode_lay;
      LinearLayout countrycodeLay = ViewBindings.findChildViewById(rootView, id);
      if (countrycodeLay == null) {
        break missingId;
      }

      id = R.id.countrycode_mobilenum_lay;
      LinearLayout countrycodeMobilenumLay = ViewBindings.findChildViewById(rootView, id);
      if (countrycodeMobilenumLay == null) {
        break missingId;
      }

      id = R.id.create_password;
      EditText createPassword = ViewBindings.findChildViewById(rootView, id);
      if (createPassword == null) {
        break missingId;
      }

      id = R.id.create_password_lay;
      FrameLayout createPasswordLay = ViewBindings.findChildViewById(rootView, id);
      if (createPasswordLay == null) {
        break missingId;
      }

      id = R.id.createpsswrd_error_text;
      TextView createpsswrdErrorText = ViewBindings.findChildViewById(rootView, id);
      if (createpsswrdErrorText == null) {
        break missingId;
      }

      id = R.id.dash_text_details;
      TextView dashTextDetails = ViewBindings.findChildViewById(rootView, id);
      if (dashTextDetails == null) {
        break missingId;
      }

      id = R.id.email_id;
      EditText emailId = ViewBindings.findChildViewById(rootView, id);
      if (emailId == null) {
        break missingId;
      }

      id = R.id.emailId_error_text;
      TextView emailIdErrorText = ViewBindings.findChildViewById(rootView, id);
      if (emailIdErrorText == null) {
        break missingId;
      }

      id = R.id.emailid_lay;
      TextInputLayout emailidLay = ViewBindings.findChildViewById(rootView, id);
      if (emailidLay == null) {
        break missingId;
      }

      id = R.id.firstName_lastname_lay;
      LinearLayout firstNameLastnameLay = ViewBindings.findChildViewById(rootView, id);
      if (firstNameLastnameLay == null) {
        break missingId;
      }

      id = R.id.firstName_lay;
      LinearLayout firstNameLay = ViewBindings.findChildViewById(rootView, id);
      if (firstNameLay == null) {
        break missingId;
      }

      id = R.id.firstname_error_text;
      TextView firstnameErrorText = ViewBindings.findChildViewById(rootView, id);
      if (firstnameErrorText == null) {
        break missingId;
      }

      id = R.id.firstname_id;
      AutoFillDisableEditText firstnameId = ViewBindings.findChildViewById(rootView, id);
      if (firstnameId == null) {
        break missingId;
      }

      id = R.id.lastname_error_text;
      TextView lastnameErrorText = ViewBindings.findChildViewById(rootView, id);
      if (lastnameErrorText == null) {
        break missingId;
      }

      id = R.id.lastname_id;
      AutoFillDisableEditText lastnameId = ViewBindings.findChildViewById(rootView, id);
      if (lastnameId == null) {
        break missingId;
      }

      id = R.id.mobilenum_lay;
      LinearLayout mobilenumLay = ViewBindings.findChildViewById(rootView, id);
      if (mobilenumLay == null) {
        break missingId;
      }

      id = R.id.phoneNumber_error_text;
      TextView phoneNumberErrorText = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberErrorText == null) {
        break missingId;
      }

      id = R.id.phone_number_lay;
      TextInputLayout phoneNumberLay = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberLay == null) {
        break missingId;
      }

      id = R.id.phone_number_reg;
      EditText phoneNumberReg = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberReg == null) {
        break missingId;
      }

      id = R.id.policies_text;
      TextView policiesText = ViewBindings.findChildViewById(rootView, id);
      if (policiesText == null) {
        break missingId;
      }

      id = R.id.pswd_transformation_btn;
      Button pswdTransformationBtn = ViewBindings.findChildViewById(rootView, id);
      if (pswdTransformationBtn == null) {
        break missingId;
      }

      id = R.id.reg_submit;
      Button regSubmit = ViewBindings.findChildViewById(rootView, id);
      if (regSubmit == null) {
        break missingId;
      }

      id = R.id.saluationSpinner;
      Spinner saluationSpinner = ViewBindings.findChildViewById(rootView, id);
      if (saluationSpinner == null) {
        break missingId;
      }

      id = R.id.specialityAutoCompleteTextView;
      AutoCompleteTextView specialityAutoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (specialityAutoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.speciality_error_text;
      TextView specialityErrorText = ViewBindings.findChildViewById(rootView, id);
      if (specialityErrorText == null) {
        break missingId;
      }

      id = R.id.speciality_lay;
      TextInputLayout specialityLay = ViewBindings.findChildViewById(rootView, id);
      if (specialityLay == null) {
        break missingId;
      }

      id = R.id.terms_policy_lay;
      RelativeLayout termsPolicyLay = ViewBindings.findChildViewById(rootView, id);
      if (termsPolicyLay == null) {
        break missingId;
      }

      id = R.id.terms_text;
      TextView termsText = ViewBindings.findChildViewById(rootView, id);
      if (termsText == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new ActivityRegisterationScreenOneBinding((ScrollView) rootView,
          activityRegisterationScreenOne, agreementText, andrstrText, ccp, check, checkErrorText,
          countrycodeLay, countrycodeMobilenumLay, createPassword, createPasswordLay,
          createpsswrdErrorText, dashTextDetails, emailId, emailIdErrorText, emailidLay,
          firstNameLastnameLay, firstNameLay, firstnameErrorText, firstnameId, lastnameErrorText,
          lastnameId, mobilenumLay, phoneNumberErrorText, phoneNumberLay, phoneNumberReg,
          policiesText, pswdTransformationBtn, regSubmit, saluationSpinner,
          specialityAutoCompleteTextView, specialityErrorText, specialityLay, termsPolicyLay,
          termsText, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
