// Generated by data binding compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.adapters.FeedsNotificationsAdapter;
import com.vam.whitecoats.viewmodel.NotificationViewModel;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentFeedNotificationBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView aviInNotifications;

  @NonNull
  public final CardView deviceNotificationOnCv;

  @NonNull
  public final RelativeLayout deviceNotificationOnRl;

  @NonNull
  public final RecyclerView feedsNotificationList;

  @NonNull
  public final ImageView notificationOnCloseIv;

  @NonNull
  public final TextView notificationOnDescTv;

  @NonNull
  public final TextView notificationOnHeaderTv;

  @NonNull
  public final ImageView notificationOnIv;

  @NonNull
  public final TextView notificationOnTv;

  @Bindable
  protected NotificationViewModel mViewModel;

  @Bindable
  protected FeedsNotificationsAdapter mAdapter;

  protected FragmentFeedNotificationBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AVLoadingIndicatorView aviInNotifications,
      CardView deviceNotificationOnCv, RelativeLayout deviceNotificationOnRl,
      RecyclerView feedsNotificationList, ImageView notificationOnCloseIv,
      TextView notificationOnDescTv, TextView notificationOnHeaderTv, ImageView notificationOnIv,
      TextView notificationOnTv) {
    super(_bindingComponent, _root, _localFieldCount);
    this.aviInNotifications = aviInNotifications;
    this.deviceNotificationOnCv = deviceNotificationOnCv;
    this.deviceNotificationOnRl = deviceNotificationOnRl;
    this.feedsNotificationList = feedsNotificationList;
    this.notificationOnCloseIv = notificationOnCloseIv;
    this.notificationOnDescTv = notificationOnDescTv;
    this.notificationOnHeaderTv = notificationOnHeaderTv;
    this.notificationOnIv = notificationOnIv;
    this.notificationOnTv = notificationOnTv;
  }

  public abstract void setViewModel(@Nullable NotificationViewModel viewModel);

  @Nullable
  public NotificationViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setAdapter(@Nullable FeedsNotificationsAdapter adapter);

  @Nullable
  public FeedsNotificationsAdapter getAdapter() {
    return mAdapter;
  }

  @NonNull
  public static FragmentFeedNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_feed_notification, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentFeedNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentFeedNotificationBinding>inflateInternal(inflater, R.layout.fragment_feed_notification, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentFeedNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_feed_notification, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentFeedNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentFeedNotificationBinding>inflateInternal(inflater, R.layout.fragment_feed_notification, null, false, component);
  }

  public static FragmentFeedNotificationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentFeedNotificationBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentFeedNotificationBinding)bind(component, view, R.layout.fragment_feed_notification);
  }
}
