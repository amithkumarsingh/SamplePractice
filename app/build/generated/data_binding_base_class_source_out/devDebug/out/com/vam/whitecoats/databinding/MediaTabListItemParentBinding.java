// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import com.vam.whitecoats.ui.customviews.CustomRecycleView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MediaTabListItemParentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout sectionArrowImage;

  @NonNull
  public final CustomRecycleView sectionImagesRecycleList;

  @NonNull
  public final TextView sectionTextId;

  private MediaTabListItemParentBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout sectionArrowImage, @NonNull CustomRecycleView sectionImagesRecycleList,
      @NonNull TextView sectionTextId) {
    this.rootView = rootView;
    this.sectionArrowImage = sectionArrowImage;
    this.sectionImagesRecycleList = sectionImagesRecycleList;
    this.sectionTextId = sectionTextId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaTabListItemParentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaTabListItemParentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_tab_list_item_parent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaTabListItemParentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.section_arrow_image;
      LinearLayout sectionArrowImage = ViewBindings.findChildViewById(rootView, id);
      if (sectionArrowImage == null) {
        break missingId;
      }

      id = R.id.section_images_recycle_list;
      CustomRecycleView sectionImagesRecycleList = ViewBindings.findChildViewById(rootView, id);
      if (sectionImagesRecycleList == null) {
        break missingId;
      }

      id = R.id.section_text_id;
      TextView sectionTextId = ViewBindings.findChildViewById(rootView, id);
      if (sectionTextId == null) {
        break missingId;
      }

      return new MediaTabListItemParentBinding((LinearLayout) rootView, sectionArrowImage,
          sectionImagesRecycleList, sectionTextId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
