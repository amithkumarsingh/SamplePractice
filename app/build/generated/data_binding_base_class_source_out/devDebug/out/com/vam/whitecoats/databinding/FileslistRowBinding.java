// Generated by view binder compiler. Do not edit!
package com.vam.whitecoats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vam.whitecoats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FileslistRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout fileItemLayout;

  @NonNull
  public final TextView fileName;

  @NonNull
  public final CheckBox fileSelectCheck;

  @NonNull
  public final ImageView fileTypeImg;

  private FileslistRowBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout fileItemLayout,
      @NonNull TextView fileName, @NonNull CheckBox fileSelectCheck,
      @NonNull ImageView fileTypeImg) {
    this.rootView = rootView;
    this.fileItemLayout = fileItemLayout;
    this.fileName = fileName;
    this.fileSelectCheck = fileSelectCheck;
    this.fileTypeImg = fileTypeImg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FileslistRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FileslistRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fileslist_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FileslistRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout fileItemLayout = (LinearLayout) rootView;

      id = R.id.file_name;
      TextView fileName = ViewBindings.findChildViewById(rootView, id);
      if (fileName == null) {
        break missingId;
      }

      id = R.id.file_select_check;
      CheckBox fileSelectCheck = ViewBindings.findChildViewById(rootView, id);
      if (fileSelectCheck == null) {
        break missingId;
      }

      id = R.id.file_type_img;
      ImageView fileTypeImg = ViewBindings.findChildViewById(rootView, id);
      if (fileTypeImg == null) {
        break missingId;
      }

      return new FileslistRowBinding((LinearLayout) rootView, fileItemLayout, fileName,
          fileSelectCheck, fileTypeImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
